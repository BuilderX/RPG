{"version":3,"sources":["src/SpriteUtil.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,CAAC,YAAY;AACX,cAAY,CAAC;;AAEb,QAAM,CAAC,IAAI;aAAS,IAAI;4BAAJ,IAAI;;;iBAAJ,IAAI;;aAEV,cAAC,GAAG,EAAE;AAChB,eAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;OACxC;;;aAEW,cAAC,GAAG,EAAE,UAAU,EAAE;AAC5B,aAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AACnB,oBAAU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SAChC;OACF;;;aAES,cAAG;;AAEX,eAAO,sCAAsC,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE;AACzE,cAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;AACvC,cAAI,CAAC,IAAI,GAAG,EAAE;AACZ,mBAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;WACvB,MAAM;AACL,mBAAO,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAA,CAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;WACvC;SACF,CAAC,CAAC;OACJ;;;aAEW,cAAC,GAAG,EAAE;;AAEhB,eAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;OACvD;;;aAEW,cAAC,GAAG,EAAE;;AAEhB,eAAO,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;OACrD;;;WAhCiB,IAAI;MAkCvB,CAAC;CAGH,CAAA,EAAG,CAAC","file":"src/SpriteUtil.js","sourcesContent":["/*\n\n2D Game Sprite Library, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n/// @file SpriteUtil.js\n/// @namespace Sprite\n/// class Sprite.Util\n\n(function () {\n  \"use strict\";\n\n  Sprite.Util = class Util {\n\n    static copy (obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n\n    static each (obj, functional) {\n      for (var key in obj) {\n        functional(obj[key], key, obj);\n      }\n    }\n\n    static id () {\n      // generate a UUID\n      return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/x|y/g, function (c) {\n        var r = Math.floor(Math.random() * 16);\n        if (c == \"x\") {\n          return r.toString(16);\n        } else {\n          return (r & 0x03 | 0x08).toString(16);\n        }\n      });\n    }\n\n    static btoa (str) {\n      // convert str to base64\n      return window.btoa(unescape(encodeURIComponent(str)));\n    }\n\n    static atob (str) {\n      // convert base64 str to original\n      return decodeURIComponent(escape(window.atob(str)));\n    }\n\n  };\n\n\n})();\n"]}