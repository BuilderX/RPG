{"version":3,"sources":["src/SpriteContainer.js"],"names":[],"mappings":"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","file":"src/SpriteContainer.js","sourcesContent":["\n/// @file SpriteContainer.js\n/// @namespace Sprite\n/// class Sprite.Container\n\n(function () {\n\n  \"use strict\";\n\n  /// @class Sprite.Container\n  /// inherit the Sprite.Display\n  Sprite.Container = class Container extends Sprite.Display {\n\n    /// @function Sprite.Container.constructor\n    /// construct a Sprite.Container object\n    constructor () {\n      super();\n      this._children = [];\n    }\n\n    get children () {\n      return this._children;\n    }\n\n    set children (value) {\n      throw new TypeError(\"Sprite.Container.children readonly\");\n    }\n\n    get cacheCanvas () {\n      return this._cacheCanvas;\n    }\n\n    set cacheCanvas (value) {\n      throw new TypeError(\"Sprite.Container.cacheCanvas readonly\");\n    }\n\n    /// @function Sprite.Container.cache\n    /// make a cache canvas of container\n    cache (x, y, width, height) {\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = width;\n      canvas.height = height;\n      var context = canvas.getContext(\"2d\");\n      this.draw(context);\n      this._cacheCanvas = canvas;\n    }\n\n    /// @function Sprite.Container.hitTest\n    hitTest (x, y) {\n      if (this._cacheCanvas) {\n        return super.hitTest(x, y);\n      } else {\n        var hitted = [];\n        for (var i = 0; i < this.children.length; i++) {\n          var ret = this.children[i].hitTest(x, y);\n          if (ret instanceof Array) {\n            hitted = hitted.concat(ret);\n          } else if (ret === true) {\n            hitted.push(this.children[i]);\n          }\n        }\n        return hitted;\n      }\n    }\n\n    /// @function Sprite.Container.draw\n    /// draw all children in this container on context\n    /// @param context, a 2d context from canvas\n    draw (context) {\n      if (this.visible != true)\n        return;\n\n      if (this._cacheCanvas) {\n        this.drawImage(context, this._cacheCanvas,\n          0, 0, this._cacheCanvas.width, this._cacheCanvas.height,\n          0, 0, this._cacheCanvas.width, this._cacheCanvas.height);\n      } else {\n        if (this._children.length <= 0) {\n          return;\n        }\n\n        this._children.forEach((element) => {\n          element.draw(context);\n        });\n      }\n    }\n\n    /// @function Sprite.Container.appendChild\n    /// append one or more children into container\n    /// eg. c.appendChild(childA) c.appendChild(childA, childB)\n    /// @param one or more children\n    appendChild () {\n      if (arguments.length <= 0) {\n        console.log(arguments, this);\n        throw new TypeError(\"Sprite.Container.appendChild has an invalid arguments\");\n      }\n\n      for (let i = 0; i < arguments.length; i++) {\n        if (arguments[i] instanceof Sprite.Display == false) {\n          console.log(arguments[i]);\n          throw new TypeError(\"Sprite.Container.appendChild only can append Sprite.Display or it's sub-class\");\n        }\n        arguments[i].parent = this;\n        this._children.push(arguments[i]);\n      }\n\n      this.emit(\"addedChildren\");\n    }\n\n    /// @function Sprite.Container.appendChildAt\n    /// append one or more children into container at certain position\n    /// eg. c.appendChildAt(0, childA) c.appendChildAt(0, childA, childB)\n    /// @param one or more children\n    appendChildAt () {\n      if (arguments.length <= 1) {\n        console.log(arguments, this);\n        throw new TypeError(\"Sprite.Container.appendChildAt has an invalid arguments\");\n      }\n\n      var index = arguments[0];\n      for (let i = 1; i < arguments.length; i++) {\n        if (arguments[i] instanceof Sprite.Display == false) {\n          console.log(arguments[i]);\n          throw new TypeError(\"Sprite.Container.appendChild only can append Sprite.Display or it's sub-class\");\n        }\n        arguments[i].parent = this;\n        this._children.splice(index, 0, arguments[i]);\n      }\n\n      this.emit(\"addedChildren\");\n    }\n\n    /// @function Sprite.Container.removeChild\n    /// remove one child from a container\n    /// eg. c.removeChild(childA)\n    /// @param the child you want to remove\n    removeChild (element) {\n      var index = this._children.indexOf(element);\n      if (index != -1) { // 删除成功\n        this._children[index].parent = null;\n        this._children.splice(index, 1);\n        this.emit(\"removedChildren\");\n        return true;\n      } else { // 没有找到需要删除的对象\n        return false;\n      }\n    }\n\n    /// @function Sprite.Container.clear\n    /// remove all children of container\n    clear () {\n      for (var i = 0; i < this._children.length; i++) {\n        this._children[i].parent = null;\n      }\n      this._children = [];\n      this.emit(\"removedChildren\");\n      return true;\n    }\n\n  };\n\n})();\n"]}