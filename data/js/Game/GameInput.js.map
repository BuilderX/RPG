{"version":3,"sources":["src/Game/GameInput.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAoBA,CAAC,YAAY;AACX,cAAY,CAAC;;AAGb,WAAS,eAAe,GAAI;AAC1B,QAAI,KAAK,GAAG,KAAK,CAAC;AAClB,QAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;AACnC,WAAK,GAAG,MAAM,CAAC;KAChB;;AAED,QAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;AAClC,UAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,eAAe,CAAC,CAAC;KAC9C,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;AACvC,UAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC;KAC5C,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;AAC1C,UAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;KAC/C,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;AACzC,UAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,eAAe,CAAC,CAAC;KAC9C;GACF;;AAED,MAAI,CAAC,MAAM,CAAC,WAAW,EAAE,YAAY;;;;;;;;;;;;;;AAiBnC,QAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,UAAU,KAAK,EAAE;AAClD,UAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;;;;AAItB,UAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;AAC7B,UAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;;AAE7B,UAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;AACjC,UAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;;AAEjC,UAAI,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE;AAClD,YAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,YAAY;AAChD,cAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;AAC9C,gBAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;WAC3B;SACF,CAAC,CAAC;OACJ;KACF,CAAC,CAAC;;AAEH,UAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,YAAY;;AAEnC,UAAI,IAAI,CAAC,MAAM,EAAE,OAAO;AACxB,UAAI,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO;AACvB,UAAI,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO;AACvB,UAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO;;AAE3B,UAAI,KAAK,YAAA,CAAC;AACV,UAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;AACnC,aAAK,GAAG,KAAK,CAAC;OACf,MAAM;AACL,aAAK,GAAG,MAAM,CAAC;OAChB;;AAED,qBAAe,EAAE,CAAC;AAClB,UAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACtB,YAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;OAClB;;AAED,UAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;KACnB,CAAC,CAAC;GACJ,CAAC,CAAC;CAGJ,CAAA,EAAG,CAAC","file":"src/Game/GameInput.js","sourcesContent":["/*\n\nA-RPG Game, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n(function () {\n  \"use strict\";\n\n\n  function CheckHeroAction () {\n    let state = \"run\";\n    if (Sprite.Input.isPressed(\"shift\")) {\n      state = \"walk\";\n    }\n\n    if (Sprite.Input.isPressed(\"left\")) {\n      Game.hero.go(state, \"left\", CheckHeroAction);\n    } else if (Sprite.Input.isPressed(\"up\")) {\n      Game.hero.go(state, \"up\", CheckHeroAction);\n    } else if (Sprite.Input.isPressed(\"right\")) {\n      Game.hero.go(state, \"right\", CheckHeroAction);\n    } else if (Sprite.Input.isPressed(\"down\")) {\n      Game.hero.go(state, \"down\", CheckHeroAction);\n    }\n  }\n\n  Game.assign(\"initInput\", function () {\n  /*\n    let mousePressed = false;\n\n    Game.stage.on(\"stagemousedown\", function (event) {\n      mousePressed = true;\n    });\n\n    Game.stage.on(\"stagemouseup\", function (event) {\n      mousePressed = false;\n    });\n\n    Game.stage.on(\"mouseleave\", function (event) { // mouse leave canvas\n      mousePressed = false;\n    });\n    */\n\n    Game.windows.stage.on(\"mousedown\", function (event) {\n      let data = event.data;\n\n      // console.log(data.x, data.y, Game.hero.sprite.x, Game.hero.sprite.y, Game.hero.sprite.hitTest(data.x, data.y));\n\n      data.x += Game.stage.centerX;\n      data.y += Game.stage.centerY;\n\n      data.x = Math.floor(data.x / 32);\n      data.y = Math.floor(data.y / 32);\n\n      if (Game.hero.x != data.x || Game.hero.y != data.y) {\n        Game.hero.goto(data.x, data.y, \"run\", function () {\n          if (Game.hintObject && Game.hintObject.heroUse) {\n            Game.hintObject.heroUse();\n          }\n        });\n      }\n    });\n\n    Sprite.Ticker.on(\"tick\", function () {\n\n      if (Game.paused) return;\n      if (!Game.hero) return;\n      if (!Game.area) return;\n      if (!Game.area.map) return;\n\n      let state;\n      if (Sprite.Input.isPressed(\"shift\")) {\n        state = \"run\";\n      } else {\n        state = \"walk\";\n      }\n\n      CheckHeroAction();\n      if (!Game.hero.walking) {\n        Game.hero.stop();\n      }\n\n      Game.hero.focus();\n    });\n  }); // Game.oninit\n\n\n})();\n"]}