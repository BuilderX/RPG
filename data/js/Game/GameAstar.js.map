{"version":3,"sources":["src/Game/GameAstar.js"],"names":[],"mappings":"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","file":"src/Game/GameAstar.js","sourcesContent":["/*\n\nA-RPG Game, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n(function () {\n  \"use strict\";\n\n  /**\n   * 自动寻路算法 A*\n   */\n  Game.assign(\"Astar\", class GameAstar {\n    /**\n     * @param {function} collisionFunction 测试是否阻挡\n     * @param {Object} start 起始位置 eg. {x: 0, y: 0}\n     * @param {Object} end\n     */\n     static getPath (start, end, callback) {\n\n       // console.time(\"t\");\n\n       let blocked = {};\n       for (let actor of Game.area.actors) {\n         if (actor.x != start.x || actor.y != start.y) {\n           blocked[actor.x * 10000 + actor.y] = true;\n         }\n       }\n\n       let result = path(function (x, y) {\n         // 判断函数，判断是否阻挡\n         if (x < 0 || x >= Game.area.map.col) {\n           return true; // 有阻挡，返回true\n         }\n         if (y < 0 || y >= Game.area.map.row) {\n           return true; // 有阻挡，返回true\n         }\n         let key = x * 10000 + y;\n         if (Game.area.map.blockedMap[key]) {\n           return true; // 有阻挡，返回true\n         }\n         if (blocked[key]) {\n           return true; // 有阻挡，返回true\n         }\n         return false; // 没有阻挡\n       }, start, end);\n\n       // console.timeEnd(\"t\");\n\n       callback(result);\n     }\n\n\n  });\n\n  // 计算点结构a和b之间的曼哈顿距离，即不带斜走的直线距离\n  function manhattan (ax, ay, bx, by) {\n    return Math.abs(ax - bx) + Math.abs(ay - by);\n  }\n  // 通过坐标x，y，当前最好的节点best和一个附加值（直线10，斜线14），返回一个新节点\n  function make (x, y, end, best, addition) {\n    let t = {\n      x: x,\n      y: y,\n      g: best.g + addition,\n      key: x * 10000 + y,\n      h: manhattan(x, y, end.x, end.y)\n    };\n    t.f = t.g + t.h;\n    t.front = [];\n    let len  = best.front.length;\n    t.front.length = len;\n    for (let i = 0; i < len; i++) {\n      t.front[i] = best.front[i];\n    }\n    t.front.push(best.x);\n    t.front.push(best.y);\n    return t;\n  }\n\n  function path (collisionFunction, start, end) {\n\n    // 开启列表和关闭列表\n    let open = new Map();\n    let close = new Map();\n\n    //构建起始节点\n    let startKey = start.x * 10000 + start.y;\n    open.set(startKey, {\n      x: start.x,\n      y: start.y,\n      key: startKey,\n      f: 0,\n      g: 0,\n      h: manhattan(start.x, start.y, end.x, end.y),\n      front: []\n    });\n\n    while (open.size) {\n      // 找到F值最小的节点\n      let best = null;\n      for (let element of open.values()) {\n        if (best == null || element.f < best.f) {\n          best = element;\n        }\n      }\n      // 从开启列表中删除，加入关闭列表\n      open.delete(best.key);\n      close.set(best.key, best);\n\n      // 如果这个最好的节点就是结尾节点，则返回\n      if (best.x == end.x && best.y == end.y) {\n        let result = [];\n        for (let i = 0, len = best.front.length; i < len; i += 2) {\n          result.push({\n            x: best.front[i],\n            y: best.front[i + 1]\n          });\n        }\n        // console.log(best.front);\n        result.push({\n          x: end.x,\n          y: end.y\n        });\n        return result;\n      }\n\n      let nx, ny;\n\n      // 记录上下左右四方向的可能值\n      nx = best.x;\n      ny = best.y - 1;\n      if (!collisionFunction(nx, ny)) { // 验证up\n        let key = nx * 10000 + ny;\n        if (!open.has(key) && !close.has(key)) {\n          open.set(key, make(nx, ny, end, best, 10));\n        }\n      }\n\n      nx = best.x;\n      ny = best.y + 1;\n      if (!collisionFunction(nx, ny)) { // 验证down\n        let key = nx * 10000 + ny;\n        if (!open.has(key) && !close.has(key)) {\n          open.set(key, make(nx, ny, end, best, 10));\n        }\n      }\n\n      nx = best.x - 1;\n      ny = best.y;\n      if (!collisionFunction(nx, ny)) { // 验证left\n        let key = nx * 10000 + ny;\n        if (!open.has(key) && !close.has(key)) {\n          open.set(key, make(nx, ny, end, best, 10));\n        }\n      }\n\n      nx = best.x + 1;\n      ny = best.y;\n      if (!collisionFunction(nx, ny)) { // 验证right\n        let key = nx * 10000 + ny;\n        if (!open.has(key) && !close.has(key)) {\n          open.set(key, make(nx, ny, end, best, 10));\n        }\n      }\n\n    } // while\n\n    return null;\n  }\n\n\n})();\n"]}