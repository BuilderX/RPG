{"version":3,"sources":["src/Game/GameAstar.js"],"names":[],"mappings":"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","file":"src/Game/GameAstar.js","sourcesContent":["/*\n\nA-RPG Game, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n(function () {\n  \"use strict\";\n\n  /**\n   * 自动寻路算法 A*\n   */\n  Game.assign(\"Astar\", class GameAstar {\n    /**\n     * @param {function} collisionFunction 测试是否阻挡\n     * @param {Object} start 起始位置 eg. {x: 0, y: 0}\n     * @param {Object} end\n     */\n     static getPath (start, end, callback) {\n\n       // console.time(\"t\");\n\n       let blocked = {};\n       for (let actor of Game.area.actors) {\n         if (actor.x != start.x || actor.y != start.y) {\n           blocked[actor.x * 10000 + actor.y] = true;\n         }\n       }\n\n       let result = path(function (x, y) {\n         // 判断函数，判断是否阻挡\n         if (x < 0 || x >= Game.area.map.col) {\n           return true; // 有阻挡，返回true\n         }\n         if (y < 0 || y >= Game.area.map.row) {\n           return true; // 有阻挡，返回true\n         }\n         let key = x * 10000 + y;\n         if (Game.area.map.blockedMap[key]) {\n           return true; // 有阻挡，返回true\n         }\n         if (blocked[key]) {\n           return true; // 有阻挡，返回true\n         }\n         return false; // 没有阻挡\n       }, start, end);\n\n       // console.timeEnd(\"t\");\n\n       callback(result);\n     }\n\n\n  });\n\n  /*\n  * reference from http://eloquentjavascript.net/1st_edition/appendix2.html\n  */\n  class BinaryHeap {\n\n    constructor (scoreFunction) {\n      this.content = [];\n      this.scoreFunction = scoreFunction;\n      this.scores = new Map();\n    }\n\n    push (element) {\n      this.scores.set(element, this.scoreFunction(element));\n      this.content.push(element);\n      this.bubbleUp(this.content.length - 1);\n    }\n\n    pop () {\n      let r = this.content[0];\n      let e = this.content.pop();\n      if (this.content.length > 0) {\n        this.content[0] = e;\n        this.sinkDown(0);\n      }\n      return r;\n    }\n\n    delete (node) {\n      for (let i = 0, len = this.content.length; i < len; i++) {\n        if (this.content[i] == node) {\n          this.scores.delete(this.content[i]);\n          let e = this.content.pop();\n          if (i == len - 1) {\n            break;\n          }\n          this.content[i] = e;\n          this.bubbleUp(i);\n          this.sinkDown(i);\n          break;\n        }\n      }\n    }\n\n    get size () {\n      return this.content.length;\n    }\n\n    set size (value) {\n      throw new Error(\"BinaryHeap.size readonly\");\n    }\n\n    bubbleUp (n) {\n      let element = this.content[n];\n      let score = this.scores.get(element);\n      while (n > 0) {\n        let parentN = Math.floor((n + 1) / 2) - 1;\n        let parent = this.content[parentN];\n        if (score >= this.scores.get(parent))\n          break;\n        this.content[parentN] = element;\n        this.content[n] = parent;\n        n = parentN;\n      }\n    }\n\n    sinkDown (n) {\n      let len = this.content.length;\n      let element = this.content[n];\n      let score = this.scores.get(element);\n\n      while (true) {\n        let child2N = (n + 1) * 2;\n        let child1N = child2N - 1;\n        let swap = null;\n        let child1score, child2score;\n\n        if (child1N < len) {\n          let child1 = this.content[child1N];\n          child1score = this.scores.get(child1);\n          if (child1score < score) {\n            swap = child1N;\n          }\n        }\n\n        if (child2N < len) {\n          let child2 = this.content[child2N];\n          child2score = this.scores.get(child2);\n          if (child2score < (swap == null ? score : child1score)) {\n            swap = child2N;\n          }\n        }\n\n        if (swap == null) {\n          break;\n        }\n\n        this.content[n] = this.content[swap];\n        this.content[swap] = element;\n        n = swap;\n      }\n\n    }\n\n  }; // BinaryHeap\n\n  // 计算点结构a和b之间的曼哈顿距离，即不带斜走的直线距离\n  function manhattan (ax, ay, bx, by) {\n    return Math.abs(ax - bx) + Math.abs(ay - by);\n  }\n\n  // 通过坐标x，y，当前最好的节点best和一个附加值（直线10，斜线14），返回一个新节点\n  function make (x, y, end, best, addition) {\n    let t = {\n      key: x * 10000 + y,\n      x: x,\n      y: y,\n      g: best.g + addition,\n      h: manhattan(x, y, end.x, end.y),\n      front: []\n    };\n    t.f = t.g + t.h;\n    let len  = best.front.length;\n    t.front.length = len;\n    for (let i = 0; i < len; i++) {\n      t.front[i] = best.front[i];\n    }\n    t.front.push(best.x);\n    t.front.push(best.y);\n    return t;\n  }\n\n  function path (collisionFunction, start, end) {\n\n    // 开启列表和关闭列表\n    let open = new BinaryHeap(function (element) {\n      return element.f;\n    });\n    let openIndex = new Set();\n    let closeIndex = new Set();\n\n    //构建起始节点\n    let startElement = {\n      key: start.x*10000+start.y,\n      x: start.x,\n      y: start.y,\n      f: 0,\n      g: 0,\n      h: manhattan(start.x, start.y, end.x, end.y),\n      front: []\n    };\n    openIndex.add(startElement.key);\n    open.push(startElement);\n\n    let push2open = function (x, y, end, best) {\n      if (!collisionFunction(x, y)) { // 验证up\n        let key = x * 10000 + y;\n        if (!openIndex.has(key) && !closeIndex.has(key)) {\n          openIndex.add(key);\n          open.push(make(x, y, end, best, 10));\n        }\n      }\n    };\n\n    while (open.size) {\n      // F值最小的节点，就是堆顶\n      let best = open.pop();\n      // 从开启列表中删除，加入关闭列表\n      open.delete(best);\n      openIndex.delete(best.key);\n      closeIndex.add(best.key);\n\n      // 如果这个最好的节点就是结尾节点，则返回\n      if (best.x == end.x && best.y == end.y) {\n        let result = [];\n        for (let i = 0, len = best.front.length; i < len; i += 2) {\n          result.push({\n            x: best.front[i],\n            y: best.front[i + 1]\n          });\n        }\n        result.push({\n          x: end.x,\n          y: end.y\n        });\n        return result;\n      }\n\n      // 记录上下左右四方向的可能值\n      push2open(best.x, best.y - 1, end, best);\n      push2open(best.x, best.y + 1, end, best);\n      push2open(best.x - 1, best.y, end, best);\n      push2open(best.x + 1, best.y, end, best);\n\n    } // while\n\n    return null;\n  }\n\n\n})();\n"]}