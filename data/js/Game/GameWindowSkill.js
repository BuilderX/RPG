/*

A-RPG Game, Built using JavaScript ES6
Copyright (C) 2015 qhduan(http://qhduan.com)

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

*/

"use strict";

(function () {
  "use strict";

  var win = Game.windows.skill = Game.Window.create("skillWindow");

  win.html = "\n    <div class=\"window-box\">\n      <div id=\"skillWindowItemBar\">\n        <button id=\"skillWindowClose\" class=\"brownButton\">关闭</button>\n      </div>\n      <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n        <thead>\n          <tr>\n            <td style=\"width: 40px;\"></td>\n            <td style=\"width: 120px;\"></td>\n            <td></td>\n            <td style=\"width: 60px;\"></td>\n          </tr>\n        </thead>\n        <tbody id=\"skillWindowTable\"></tbody>\n      </table>\n    </div>\n  ";

  win.css = "\n    .skillWindow table {\n      width: 100%;\n    }\n\n    .skillWindow table img {\n      width: 100%;\n      height: 100%;\n    }\n\n    .skillWindow button {\n      width: 60px;\n      height: 40px;\n      font-size: 16px;\n    }\n\n    #skillWindowItemBar button {\n      width: 60px;\n      height: 40px;\n      font-size: 16px;\n      margin-left: 5px;\n      margin-right: 5px;\n      margin-top: 0px;\n      margin-bottom: 5px;\n    }\n\n    #skillWindowClose {\n      float: right;\n    }\n  ";

  var skillWindowClose = win.querySelector("button#skillWindowClose");
  var skillWindowTable = win.querySelector("#skillWindowTable");

  var lastSelect = -1;

  skillWindowClose.addEventListener("click", function (event) {
    win.hide();
  });

  win.whenUp(["esc"], function (key) {
    setTimeout(function () {
      win.hide();
    }, 20);
  });

  win.assign("open", function (select) {

    if (typeof select == "undefined") {
      select = -1;
    }

    lastSelect = select;

    var index = 0;
    var table = "";
    Game.hero.data.skills.forEach(function (skillId) {
      var skill = Game.skills[skillId];

      var line = "";

      if (select == index) {
        line += "<tr style=\"background-color: green;\">\n";
      } else {
        line += "<tr>\n";
      }

      line += "  <td><img alt=\"\" src=\"" + skill.icon.src + "\"></td>\n";
      line += "  <td>" + skill.data.name + "</td>\n";
      line += "  <td>" + skill.data.description + "</td>\n";
      line += "  <td><button data-id=\"" + skillId + "\" class=\"brownButton skillWindowManage\">管理</button></td>\n";
      line += "</tr>\n";
      table += line;
      index++;
    });

    skillWindowTable.innerHTML = table;
    Game.windows.skill.show();
  });

  win.whenUp(["enter"], function () {
    var buttons = win.querySelectorAll(".skillWindowManage");
    if (lastSelect >= 0 && lastSelect < buttons.length) {
      buttons[lastSelect].click();
    }
  });

  win.whenUp(["up", "down"], function (key) {
    var count = win.querySelectorAll(".skillWindowManage").length;

    if (lastSelect == -1) {
      if (key == "down") {
        win.open(0);
      } else if (key == "up") {
        win.open(count - 1);
      }
    } else {
      if (key == "down") {
        var select = lastSelect + 1;
        if (select >= count) {
          select = 0;
        }
        win.open(select);
      } else if (key == "up") {
        var select = lastSelect - 1;
        if (select < 0) {
          select = count - 1;
        }
        win.open(select);
      }
    }
  });

  skillWindowTable.addEventListener("click", function (event) {
    var skillId = event.target.getAttribute("data-id");
    var index = Game.hero.data.skills.indexOf(skillId);
    if (skillId && Game.skills.hasOwnProperty(skillId) && index != -1) {
      (function () {

        var skill = Game.skills[skillId];

        var options = {};

        options["快捷栏"] = "shortcut";
        options["遗忘"] = "remove";
        if (skill.data.next) {
          options["升级"] = "levelup";
        }

        Game.choice(options, function (choice) {
          switch (choice) {
            case "shortcut":
              Game.choice({
                1: 0,
                2: 1,
                3: 2,
                4: 3,
                5: 4,
                6: 5,
                7: 6,
                8: 7
              }, function (choice) {
                if (Number.isFinite(choice) && choice >= 0) {
                  Game.hero.data.bar[choice] = {
                    id: skillId,
                    type: "skill"
                  };
                  Game.windows["interface"].refresh();
                }
              });
              break;
            case "levelup":
              if (skill.data.next) {
                var cannot = [];
                if (Game.hero.data.gold < skill.data.next.gold) {
                  cannot.push("金币不足，需要金币" + skill.data.next.gold + "，当前您有金币" + Game.hero.data.gold);
                }
                if (Game.hero.data.exp < skill.data.next.exp) {
                  cannot.push("经验不足，需要经验" + skill.data.next.exp + "，当前您有经验" + Game.hero.data.exp);
                }
                if (cannot.length) {
                  Game.dialogue(cannot);
                  return;
                }
                Game.confirm("确定要升级这个技能吗？共需要金币" + skill.data.next.gold + "，经验" + skill.data.next.exp, function () {
                  var nextId = skill.data.next.id;
                  Game.hero.data.skills.splice(index, 1);
                  Game.hero.data.skills.push(nextId);
                  Game.hero.data.gold -= skill.data.next.gold;
                  Game.hero.data.exp -= skill.data.next.exp;
                  Game.windows.loading.begin();
                  Game.Skill.load(nextId).then(function (skillObj) {
                    Game.windows.loading.end();
                    win.open();
                  });
                });
              }
              break;
            case "remove":
              Game.confirm("真的要遗忘 " + skill.data.name + " 技能吗？", function () {
                Game.hero.data.bar.forEach(function (element, index, array) {
                  if (element && element.id == skillId) {
                    array[index] = null;
                  }
                });
                Game.hero.data.skills.splice(index, 1);
                Game.windows["interface"].refresh();
                win.open();
              });
              break;
          }
        });
      })();
    }
  });
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9HYW1lL0dhbWVXaW5kb3dTa2lsbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0JBLENBQUMsWUFBWTtBQUNYLGNBQVksQ0FBQzs7QUFFYixNQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQzs7QUFFakUsS0FBRyxDQUFDLElBQUksNGhCQWlCUCxDQUFDOztBQUVGLEtBQUcsQ0FBQyxHQUFHLDRmQTZCTixDQUFDOztBQUVGLE1BQUksZ0JBQWdCLEdBQUcsR0FBRyxDQUFDLGFBQWEsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0FBQ3BFLE1BQUksZ0JBQWdCLEdBQUcsR0FBRyxDQUFDLGFBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDOztBQUU5RCxNQUFJLFVBQVUsR0FBRyxDQUFDLENBQUMsQ0FBQzs7QUFFcEIsa0JBQWdCLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFVBQVUsS0FBSyxFQUFFO0FBQzFELE9BQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztHQUNaLENBQUMsQ0FBQzs7QUFFSCxLQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUUsVUFBVSxHQUFHLEVBQUU7QUFDakMsY0FBVSxDQUFDLFlBQVk7QUFDckIsU0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO0tBQ1osRUFBRSxFQUFFLENBQUMsQ0FBQztHQUNSLENBQUMsQ0FBQzs7QUFFSCxLQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxVQUFVLE1BQU0sRUFBRTs7QUFFbkMsUUFBSSxPQUFPLE1BQU0sSUFBSSxXQUFXLEVBQUU7QUFDaEMsWUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0tBQ2I7O0FBRUQsY0FBVSxHQUFHLE1BQU0sQ0FBQzs7QUFFcEIsUUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO0FB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QyxDQUFDO0FBQ3ZDLG9CQUFJLENBQUMsT0FBTyxhQUFVLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDakMsbUJBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztlQUNaLENBQUMsQ0FBQztBQUNILG9CQUFNO0FBQUEsV0FDVDtTQUNGLENBQUMsQ0FBQzs7S0FFSjtHQUNGLENBQUMsQ0FBQztDQUdKLENBQUEsRUFBRyxDQUFDIiwiZmlsZSI6IkdhbWVXaW5kb3dTa2lsbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5cbkEtUlBHIEdhbWUsIEJ1aWx0IHVzaW5nIEphdmFTY3JpcHQgRVM2XG5Db3B5cmlnaHQgKEMpIDIwMTUgcWhkdWFuKGh0dHA6Ly9xaGR1YW4uY29tKVxuXG5UaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG5UaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG5cbiovXG5cbihmdW5jdGlvbiAoKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIGxldCB3aW4gPSBHYW1lLndpbmRvd3Muc2tpbGwgPSBHYW1lLldpbmRvdy5jcmVhdGUoXCJza2lsbFdpbmRvd1wiKTtcblxuICB3aW4uaHRtbCA9IGBcbiAgICA8ZGl2IGNsYXNzPVwid2luZG93LWJveFwiPlxuICAgICAgPGRpdiBpZD1cInNraWxsV2luZG93SXRlbUJhclwiPlxuICAgICAgICA8YnV0dG9uIGlkPVwic2tpbGxXaW5kb3dDbG9zZVwiIGNsYXNzPVwiYnJvd25CdXR0b25cIj7lhbPpl608L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPHRhYmxlIGJvcmRlcj1cIjFcIiBjZWxsc3BhY2luZz1cIjBcIiBjZWxscGFkZGluZz1cIjBcIj5cbiAgICAgICAgPHRoZWFkPlxuICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgIDx0ZCBzdHlsZT1cIndpZHRoOiA0MHB4O1wiPjwvdGQ+XG4gICAgICAgICAgICA8dGQgc3R5bGU9XCJ3aWR0aDogMTIwcHg7XCI+PC90ZD5cbiAgICAgICAgICAgIDx0ZD48L3RkPlxuICAgICAgICAgICAgPHRkIHN0eWxlPVwid2lkdGg6IDYwcHg7XCI+PC90ZD5cbiAgICAgICAgICA8L3RyPlxuICAgICAgICA8L3RoZWFkPlxuICAgICAgICA8dGJvZHkgaWQ9XCJza2lsbFdpbmRvd1RhYmxlXCI+PC90Ym9keT5cbiAgICAgIDwvdGFibGU+XG4gICAgPC9kaXY+XG4gIGA7XG5cbiAgd2luLmNzcyA9IGBcbiAgICAuc2tpbGxXaW5kb3cgdGFibGUge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4gICAgLnNraWxsV2luZG93IHRhYmxlIGltZyB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG5cbiAgICAuc2tpbGxXaW5kb3cgYnV0dG9uIHtcbiAgICAgIHdpZHRoOiA2MHB4O1xuICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgIH1cblxuICAgICNza2lsbFdpbmRvd0l0ZW1CYXIgYnV0dG9uIHtcbiAgICAgIHdpZHRoOiA2MHB4O1xuICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDVweDtcbiAgICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICAgICAgbWFyZ2luLXRvcDogMHB4O1xuICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICAgIH1cblxuICAgICNza2lsbFdpbmRvd0Nsb3NlIHtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICB9XG4gIGA7XG5cbiAgbGV0IHNraWxsV2luZG93Q2xvc2UgPSB3aW4ucXVlcnlTZWxlY3RvcihcImJ1dHRvbiNza2lsbFdpbmRvd0Nsb3NlXCIpO1xuICBsZXQgc2tpbGxXaW5kb3dUYWJsZSA9IHdpbi5xdWVyeVNlbGVjdG9yKFwiI3NraWxsV2luZG93VGFibGVcIik7XG5cbiAgbGV0IGxhc3RTZWxlY3QgPSAtMTtcblxuICBza2lsbFdpbmRvd0Nsb3NlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICB3aW4uaGlkZSgpO1xuICB9KTtcblxuICB3aW4ud2hlblVwKFtcImVzY1wiXSwgZnVuY3Rpb24gKGtleSkge1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgd2luLmhpZGUoKTtcbiAgICB9LCAyMCk7XG4gIH0pO1xuXG4gIHdpbi5hc3NpZ24oXCJvcGVuXCIsIGZ1bmN0aW9uIChzZWxlY3QpIHtcblxuICAgIGlmICh0eXBlb2Ygc2VsZWN0ID09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHNlbGVjdCA9IC0xO1xuICAgIH1cblxuICAgIGxhc3RTZWxlY3QgPSBzZWxlY3Q7XG5cbiAgICBsZXQgaW5kZXggPSAwO1xuICAgIGxldCB0YWJsZSA9IFwiXCI7XG4gICAgR2FtZS5oZXJvLmRhdGEuc2tpbGxzLmZvckVhY2goZnVuY3Rpb24gKHNraWxsSWQpIHtcbiAgICAgIGxldCBza2lsbCA9IEdhbWUuc2tpbGxzW3NraWxsSWRdO1xuXG4gICAgICBsZXQgbGluZSA9IFwiXCI7XG5cbiAgICAgIGlmIChzZWxlY3QgPT0gaW5kZXgpIHtcbiAgICAgICAgbGluZSArPSBgPHRyIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XCI+XFxuYDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxpbmUgKz0gYDx0cj5cXG5gO1xuICAgICAgfVxuXG4gICAgICBsaW5lICs9IGAgIDx0ZD48aW1nIGFsdD1cIlwiIHNyYz1cIiR7c2tpbGwuaWNvbi5zcmN9XCI+PC90ZD5cXG5gO1xuICAgICAgbGluZSArPSBgICA8dGQ+JHtza2lsbC5kYXRhLm5hbWV9PC90ZD5cXG5gO1xuICAgICAgbGluZSArPSBgICA8dGQ+JHtza2lsbC5kYXRhLmRlc2NyaXB0aW9ufTwvdGQ+XFxuYDtcbiAgICAgIGxpbmUgKz0gYCAgPHRkPjxidXR0b24gZGF0YS1pZD1cIiR7c2tpbGxJZH1cIiBjbGFzcz1cImJyb3duQnV0dG9uIHNraWxsV2luZG93TWFuYWdlXCI+566h55CGPC9idXR0b24+PC90ZD5cXG5gO1xuICAgICAgbGluZSArPSBcIjwvdHI+XFxuXCI7XG4gICAgICB0YWJsZSArPSBsaW5lO1xuICAgICAgaW5kZXgrKztcbiAgICB9KTtcblxuICAgIHNraWxsV2luZG93VGFibGUuaW5uZXJIVE1MID0gdGFibGU7XG4gICAgR2FtZS53aW5kb3dzLnNraWxsLnNob3coKTtcbiAgfSk7XG5cbiAgd2luLndoZW5VcChbXCJlbnRlclwiXSwgZnVuY3Rpb24gKCkge1xuICAgIGxldCBidXR0b25zID0gd2luLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuc2tpbGxXaW5kb3dNYW5hZ2VcIik7XG4gICAgaWYgKGxhc3RTZWxlY3QgPj0gMCAmJiBsYXN0U2VsZWN0IDwgYnV0dG9ucy5sZW5ndGgpIHtcbiAgICAgIGJ1dHRvbnNbbGFzdFNlbGVjdF0uY2xpY2soKTtcbiAgICB9XG4gIH0pO1xuXG4gIHdpbi53aGVuVXAoW1widXBcIiwgXCJkb3duXCJdLCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgbGV0IGNvdW50ID0gd2luLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuc2tpbGxXaW5kb3dNYW5hZ2VcIikubGVuZ3RoO1xuXG4gICAgaWYgKGxhc3RTZWxlY3QgPT0gLTEpIHtcbiAgICAgIGlmIChrZXkgPT0gXCJkb3duXCIpIHtcbiAgICAgICAgd2luLm9wZW4oMCk7XG4gICAgICB9IGVsc2UgaWYgKGtleSA9PSBcInVwXCIpIHtcbiAgICAgICAgd2luLm9wZW4oY291bnQgLSAxKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGtleSA9PSBcImRvd25cIikge1xuICAgICAgICBsZXQgc2VsZWN0ID0gbGFzdFNlbGVjdCArIDE7XG4gICAgICAgIGlmIChzZWxlY3QgPj0gY291bnQpIHtcbiAgICAgICAgICBzZWxlY3QgPSAwO1xuICAgICAgICB9XG4gICAgICAgIHdpbi5vcGVuKHNlbGVjdCk7XG4gICAgICB9IGVsc2UgaWYgKGtleSA9PSBcInVwXCIpIHtcbiAgICAgICAgbGV0IHNlbGVjdCA9IGxhc3RTZWxlY3QgLSAxO1xuICAgICAgICBpZiAoc2VsZWN0IDwgMCkge1xuICAgICAgICAgIHNlbGVjdCA9IGNvdW50IC0gMTtcbiAgICAgICAgfVxuICAgICAgICB3aW4ub3BlbihzZWxlY3QpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgc2tpbGxXaW5kb3dUYWJsZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgbGV0IHNraWxsSWQgPSBldmVudC50YXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0YS1pZFwiKTtcbiAgICBsZXQgaW5kZXggPSBHYW1lLmhlcm8uZGF0YS5za2lsbHMuaW5kZXhPZihza2lsbElkKTtcbiAgICBpZiAoc2tpbGxJZCAmJiBHYW1lLnNraWxscy5oYXNPd25Qcm9wZXJ0eShza2lsbElkKSAmJiBpbmRleCAhPSAtMSkge1xuXG4gICAgICBsZXQgc2tpbGwgPSBHYW1lLnNraWxsc1tza2lsbElkXTtcblxuICAgICAgbGV0IG9wdGlvbnMgPSB7fTtcblxuICAgICAgb3B0aW9uc1tcIuW/q+aNt+agj1wiXSA9IFwic2hvcnRjdXRcIjtcbiAgICAgIG9wdGlvbnNbXCLpgZflv5hcIl0gPSBcInJlbW92ZVwiO1xuICAgICAgaWYgKHNraWxsLmRhdGEubmV4dCkge1xuICAgICAgICBvcHRpb25zW1wi5Y2H57qnXCJdID0gXCJsZXZlbHVwXCI7XG4gICAgICB9XG5cbiAgICAgIEdhbWUuY2hvaWNlKG9wdGlvbnMsIGZ1bmN0aW9uIChjaG9pY2UpIHtcbiAgICAgICAgc3dpdGNoKGNob2ljZSkge1xuICAgICAgICAgIGNhc2UgXCJzaG9ydGN1dFwiOlxuICAgICAgICAgICAgR2FtZS5jaG9pY2Uoe1xuICAgICAgICAgICAgICAxOjAsXG4gICAgICAgICAgICAgIDI6MSxcbiAgICAgICAgICAgICAgMzoyLFxuICAgICAgICAgICAgICA0OjMsXG4gICAgICAgICAgICAgIDU6NCxcbiAgICAgICAgICAgICAgNjo1LFxuICAgICAgICAgICAgICA3OjYsXG4gICAgICAgICAgICAgIDg6N1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKGNob2ljZSkge1xuICAgICAgICAgICAgICBpZiAoTnVtYmVyLmlzRmluaXRlKGNob2ljZSkgJiYgY2hvaWNlID49IDApIHtcbiAgICAgICAgICAgICAgICBHYW1lLmhlcm8uZGF0YS5iYXJbY2hvaWNlXSA9IHtcbiAgICAgICAgICAgICAgICAgIGlkOiBza2lsbElkLFxuICAgICAgICAgICAgICAgICAgdHlwZTogXCJza2lsbFwiXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBHYW1lLndpbmRvd3MuaW50ZXJmYWNlLnJlZnJlc2goKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwibGV2ZWx1cFwiOlxuICAgICAgICAgICAgaWYgKHNraWxsLmRhdGEubmV4dCkge1xuICAgICAgICAgICAgICBsZXQgY2Fubm90ID0gW107XG4gICAgICAgICAgICAgIGlmIChHYW1lLmhlcm8uZGF0YS5nb2xkIDwgc2tpbGwuZGF0YS5uZXh0LmdvbGQpIHtcbiAgICAgICAgICAgICAgICBjYW5ub3QucHVzaChg6YeR5biB5LiN6Laz77yM6ZyA6KaB6YeR5biBJHtza2lsbC5kYXRhLm5leHQuZ29sZH3vvIzlvZPliY3mgqjmnInph5HluIEke0dhbWUuaGVyby5kYXRhLmdvbGR9YCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgaWYgKEdhbWUuaGVyby5kYXRhLmV4cCA8IHNraWxsLmRhdGEubmV4dC5leHApIHtcbiAgICAgICAgICAgICAgICBjYW5ub3QucHVzaChg57uP6aqM5LiN6Laz77yM6ZyA6KaB57uP6aqMJHtza2lsbC5kYXRhLm5leHQuZXhwfe+8jOW9k+WJjeaCqOaciee7j+mqjCR7R2FtZS5oZXJvLmRhdGEuZXhwfWApO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGlmIChjYW5ub3QubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgR2FtZS5kaWFsb2d1ZShjYW5ub3QpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBHYW1lLmNvbmZpcm0oYOehruWumuimgeWNh+e6p+i/meS4quaKgOiDveWQl++8n+WFsemcgOimgemHkeW4gSR7c2tpbGwuZGF0YS5uZXh0LmdvbGR977yM57uP6aqMJHtza2lsbC5kYXRhLm5leHQuZXhwfWAsIGZ1bmN0aW9uICgpIHsgICAgICAgICAgICAgICAgbGV0IG5leHRJZCA9IHNraWxsLmRhdGEubmV4dC5pZDtcbiAgICAgICAgICAgICAgICBHYW1lLmhlcm8uZGF0YS5za2lsbHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgICAgICBHYW1lLmhlcm8uZGF0YS5za2lsbHMucHVzaChuZXh0SWQpO1xuICAgICAgICAgICAgICAgIEdhbWUuaGVyby5kYXRhLmdvbGQgLT0gc2tpbGwuZGF0YS5uZXh0LmdvbGQ7XG4gICAgICAgICAgICAgICAgR2FtZS5oZXJvLmRhdGEuZXhwIC09IHNraWxsLmRhdGEubmV4dC5leHA7XG4gICAgICAgICAgICAgICAgR2FtZS53aW5kb3dzLmxvYWRpbmcuYmVnaW4oKTtcbiAgICAgICAgICAgICAgICBHYW1lLlNraWxsLmxvYWQobmV4dElkKS50aGVuKGZ1bmN0aW9uIChza2lsbE9iaikge1xuICAgICAgICAgICAgICAgICAgR2FtZS53aW5kb3dzLmxvYWRpbmcuZW5kKCk7XG4gICAgICAgICAgICAgICAgICB3aW4ub3BlbigpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJyZW1vdmVcIjpcbiAgICAgICAgICAgIEdhbWUuY29uZmlybShg55yf55qE6KaB6YGX5b+YICR7c2tpbGwuZGF0YS5uYW1lfSDmioDog73lkJfvvJ9gLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIEdhbWUuaGVyby5kYXRhLmJhci5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50LCBpbmRleCwgYXJyYXkpIHtcbiAgICAgICAgICAgICAgICBpZiAoZWxlbWVudCAmJiBlbGVtZW50LmlkID09IHNraWxsSWQpIHtcbiAgICAgICAgICAgICAgICAgIGFycmF5W2luZGV4XSA9IG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgR2FtZS5oZXJvLmRhdGEuc2tpbGxzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICAgIEdhbWUud2luZG93cy5pbnRlcmZhY2UucmVmcmVzaCgpO1xuICAgICAgICAgICAgICB3aW4ub3BlbigpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICB9XG4gIH0pO1xuXG5cbn0pKCk7XG4iXX0=
