{"version":3,"sources":["src/Game/GameMap.js"],"names":[],"mappings":"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","file":"src/Game/GameMap.js","sourcesContent":["/*\n\nA-RPG Game, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n(function () {\n  \"use strict\";\n\n  let internal = Sprite.Namespace();\n\n  Game.assign(\"Map\", class GameMap extends Sprite.Event {\n\n    static load (id) {\n      return new Promise(function (resolve, reject) {\n        Sprite.load(`map/${id}.json`, `map/${id}.js`).then(function (data) {\n          let mapData = data[0];\n          let mapInfo = data[1](); // map/id.js文件会返回一个函数\n          mapData.id = id;\n\n          for (let key in mapInfo) {\n            if (mapData.hasOwnProperty(key)) {\n              console.log(key, mapData[key], mapInfo[key], mapInfo, mapData);\n              throw new Error(\"Game.loadArea invalid data\");\n            }\n            mapData[key] = mapInfo[key];\n          }\n\n          let mapObj = new Game.Map(mapData);\n          mapObj.on(\"complete\", function () {\n            resolve(mapObj);\n          })\n        });\n      });\n    }\n\n    hitTest (x, y) {\n      if (internal(this).blockedMap[x*10000+y]) {\n        return true;\n      }\n      return false;\n    }\n\n    hitWater (x, y) {\n      if (internal(this).waterMap[x*10000+y]) {\n        return true;\n      }\n      return false;\n    }\n\n    hitAutoHide (x, y) {\n      if (internal(this).autoHideMap[x*10000+y]) {\n        return internal(this).autoHideMap[x*10000+y];\n      }\n      return null;\n    }\n\n    get blockedMap () {\n      return internal(this).blockedMap;\n    }\n\n    set blockedMap (value) {\n      throw new Error(\"Game.Map.blockedMap readonly\");\n    }\n\n    constructor (mapData) {\n      super();\n      let privates = internal(this);\n      privates.data = mapData;\n\n      let images = [];\n      for (let element of privates.data.tilesets) {\n        images.push(`map/${element.image}`);\n      };\n\n      Sprite.load(images).then((data) => {\n\n        // 释放空间\n        privates.data.tilesets = null;\n\n        privates.sheet = new Sprite.Sheet({\n          images: data,\n          width: privates.data.tilewidth,\n          height: privates.data.tileheight,\n        });\n\n        // 水地图，用来进行hitWater测试\n        privates.waterMap = {};\n        // 计算阻挡地图，如果为object则有阻挡，undefined则无阻挡\n        privates.blockedMap = {};\n        // 某些层在玩家走到其中后会自动隐藏\n        privates.autoHideMap = {};\n\n        // 保存这个地图的所有地图块\n        // 这个空间在draw后会释放\n        privates.layers = [];\n\n        for (let layerData of privates.data.layers) {\n          let layerObj = null;\n          if (layerData.name != \"block\" && layerData.name != \"water\") {\n            layerObj = new Sprite.Container();\n            layerObj.name = layerData.name;\n            privates.layers.push(layerObj);\n          }\n\n          let width = this.col;\n          let height = this.row;\n          for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n              let position = x + y * width;\n              let key = x * 10000 + y;\n              let picture = layerData.data[position] - 1;\n\n              if (picture >= 0) {\n                if (layerData.name == \"block\") {\n                  privates.blockedMap[key] = true;\n                } else if (layerData.name == \"water\") {\n                  privates.waterMap[key] = true;\n                } else {\n                  let frame = privates.sheet.getFrame(picture);\n                  frame.x = x * privates.data.tilewidth;\n                  frame.y = y * privates.data.tileheight;\n\n                  if (layerData.properties && layerData.properties.autohide) {\n                    privates.autoHideMap[key] = layerData.properties.autohide;\n                  }\n\n                  layerObj.appendChild(frame);\n                }\n              }\n\n            }\n          }\n        }\n\n        // 发送完成事件，第二个参数代表此事件是一次性事件，即不会再次complete\n        this.emit(\"complete\", true);\n      });\n\n    }\n\n    get data () {\n      return internal(this).data;\n    }\n\n    set data (value) {\n      throw new Error(\"Game.Map.data readonly\");\n    }\n\n    get id () {\n      return internal(this).id;\n    }\n\n    set id (value) {\n      throw new Error(\"Game.Map.id readonly\");\n    }\n\n    get width () {\n      return this.data.width * this.data.tilewidth;\n    }\n\n    set width (value) {\n      throw new Error(\"Game.Map.width readonly\");\n    }\n\n    get height () {\n      return this.data.height * this.data.tileheight;\n    }\n\n    set height (value) {\n      throw new Error(\"Game.Map.height readonly\");\n    }\n\n    get col () { // width / tilewidth\n      return this.data.width;\n    }\n\n    set col (value) {\n      throw new Error(\"Game.Map.col readonly\");\n    }\n\n    get row () { // height / tileheight\n      return this.data.height\n    }\n\n    set row (value) {\n      throw new Error(\"Game.Map.row readonly\");\n    }\n\n    get minimap () {\n      return internal(this).minimap;\n    }\n\n    set minimap (value) {\n      throw new Error(\"Game.Map.minimap readonly\");\n    }\n\n    // 返回某个坐标点所在的地格\n    tile (x, y) {\n      if (Number.isFinite(x) && Number.isFinite(y)) {\n        return {\n          x: Math.floor(x / this.data.tilewidth),\n          y: Math.floor(y / this.data.tileheight)\n        };\n      } else {\n        console.error(x, y, this.data);\n        throw new Error(\"Game.Map.tile got invalid arguments\");\n      }\n    }\n\n    // 绘制图片，会改变Game.currentArea\n    draw () {\n      let privates = internal(this);\n      Game.layers.mapLayer.clear();\n      Game.layers.mapHideLayer.clear();\n\n      let autohideLayer = {};\n\n      privates.layers.forEach((element, index) => {\n        let layerData = privates.data.layers[index];\n\n        if (Number.isFinite(layerData.opacity)) {\n          element.alpha = layerData.opacity;\n        }\n\n        if (layerData.properties && layerData.properties.autohide) {\n          let group = layerData.properties.autohide;\n          if (!autohideLayer[group]) {\n            autohideLayer[group] = new Sprite.Container();\n          }\n          autohideLayer[group].appendChild(element);\n        } else {\n          Game.layers.mapLayer.appendChild(element);\n        }\n      });\n\n      // 释放冗余空间\n      privates.layers = null;\n      privates.data.layers = null;\n\n      // 给所有自动隐藏的地图缓冲层\n      for (let group in autohideLayer) {\n        autohideLayer[group].cache();\n        let autohideMap = new Sprite.Bitmap(autohideLayer[group].cacheCanvas);\n        autohideMap.x = autohideLayer[group].cacheX;\n        autohideMap.y = autohideLayer[group].cacheY;\n        autohideMap.name = group;\n        Game.layers.mapHideLayer.appendChild(autohideMap);\n      }\n      autohideLayer = null;\n\n      // 给其他地图缓冲层\n      Game.layers.mapLayer.cache();\n      let map = new Sprite.Bitmap(Game.layers.mapLayer.cacheCanvas);\n      Game.layers.mapLayer.clear();\n      Game.layers.mapLayer.appendChild(map);\n\n      let minimap = document.createElement(\"canvas\");\n      minimap.width = this.col * 8; // 原地图的四倍\n      minimap.height = this.row * 8;\n      let minimapContext = minimap.getContext(\"2d\");\n      minimapContext.drawImage(map.image,\n        0, 0, map.width, map.height,\n        0, 0, minimap.width, minimap.height);\n\n      privates.minimap = minimap;\n\n\n      if (privates.data.bgm) {\n        // set loop = -1, 无限循环\n        //let bgm = createjs.Sound.play(this.data.bgm, undefined, undefined, undefined, -1);\n        //bgm.setVolume(0.2);\n      }\n\n      let block = {};\n\n      // 生成怪物\n      if (\n        privates.data.spawnMonster &&\n        privates.data.spawnMonster.list &&\n        privates.data.spawnMonster.count\n      ) {\n        let done = 0;\n        while (done < privates.data.spawnMonster.count) {\n          let monsterId = null;\n          let prob = 0;\n          let r = Math.random();\n          for (let key in privates.data.spawnMonster.list) {\n            prob += privates.data.spawnMonster.list[key];\n            if (r < prob) {\n              monsterId = key;\n              break;\n            }\n          }\n          if (monsterId) {\n            done++;\n            Game.Actor.load(monsterId).then((actorObj) => {\n              let x, y;\n              while (true) {\n                x = Sprite.rand(0, this.col);\n                y = Sprite.rand(0, this.row);\n                if (!this.hitTest(x, y) && !block[x*10000+y]) {\n                  break;\n                }\n              }\n              block[x*10000+y] = true;\n              actorObj.x = x;\n              actorObj.y = y;\n              Game.area.actors.add(actorObj);\n              actorObj.draw();\n            });\n          }\n        }\n      }\n\n      if (\n        privates.data.spawnItem &&\n        privates.data.spawnItem.list &&\n        privates.data.spawnItem.count\n      ) {\n        let done = 0;\n        while (done < privates.data.spawnItem.count) {\n          let oreId = null;\n          let prob = 0;\n          let r = Math.random();\n          for (let key in privates.data.spawnItem.list) {\n            prob += privates.data.spawnItem.list[key];\n            if (r < prob) {\n              oreId = key;\n              break;\n            }\n          }\n          if (oreId) {\n            done++;\n            Game.Item.load(oreId).then((itemObj) => {\n              let x, y;\n              while (true) {\n                x = Sprite.rand(0, this.col);\n                y = Sprite.rand(0, this.row);\n                if (!this.hitTest(x, y) && !block[x*10000+y]) {\n                  break;\n                }\n              }\n              block[x*10000+y] = true;\n              itemObj.x = x;\n              itemObj.y = y;\n              itemObj.inner = {};\n              itemObj.inner[oreId] = 1;\n              Game.area.bags.add(itemObj);\n              itemObj.draw();\n            });\n          }\n        }\n      }\n\n\n    }\n  });\n\n\n})();\n"]}