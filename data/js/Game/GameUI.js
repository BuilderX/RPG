"use strict";

/*

A-RPG Game, Built using JavaScript ES6
Copyright (C) 2015 qhduan(http://qhduan.com)

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

*/

(function () {
  "use strict";

  var popupCache = new Map();

  Game.assign("popup", function (obj, text) {
    var adjustX = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];
    var adjustY = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];

    if (popupCache.has(obj)) {
      var popup = popupCache.get(obj);
      Game.layers.dialogueLayer.removeChild(popup.container);
      clearInterval(popup.timer);
      popupCache.delete(obj);
    }

    var dialogueText = new Sprite.Text({
      text: text,
      maxWidth: 200
    });

    var w = dialogueText.width;
    var h = dialogueText.height;
    var middle = Math.round((w + 10) / 2);

    var dialogueBox = new Sprite.Shape();

    dialogueBox.polygon({
      points: "0,0 " + (w + 10) + ",0 " + (w + 10) + "," + (h + 10) + " " + (middle + 5) + "," + (h + 10) + " " + middle + "," + (h + 15) + " " + (middle - 5) + "," + (h + 10) + " 0," + (h + 10) + " 0,0",
      fill: "white"
    });

    var dialogueContainer = new Sprite.Container();
    dialogueContainer.appendChild(dialogueBox, dialogueText);
    dialogueText.x = 5;
    dialogueText.y = 5;
    dialogueContainer.x = obj.x + adjustX;
    dialogueContainer.y = obj.y + adjustY;
    dialogueContainer.centerX = middle;
    dialogueContainer.centerY = h + 15;

    Game.layers.dialogueLayer.appendChild(dialogueContainer);

    if (obj instanceof Sprite.Event) {
      obj.on("change", function () {
        dialogueContainer.x = obj.x + adjustX;
        dialogueContainer.y = obj.y + adjustY;
      });
    }

    var timer = setTimeout(function () {
      if (popupCache.has(obj)) {
        var popup = popupCache.get(obj);
        Game.layers.dialogueLayer.removeChild(popup.container);
        popupCache.delete(obj);
      }
    }, 3000);

    popupCache.set(obj, {
      container: dialogueContainer,
      timer: timer
    });
  });
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9HYW1lL0dhbWVVSS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0JBLENBQUMsWUFBWTtBQUNYLGNBQVksQ0FBQzs7QUFFYixNQUFJLFVBQVUsR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDOztBQUUzQixNQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxVQUFVLEdBQUcsRUFBRSxJQUFJLEVBQTRCO1FBQTFCLE9BQU8seURBQUcsQ0FBQztRQUFFLE9BQU8seURBQUcsQ0FBQzs7QUFFaEUsUUFBSSxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFO0FBQ3ZCLFVBQUksS0FBSyxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDaEMsVUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUN2RCxtQkFBYSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUMzQixnQkFBVSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUN4Qjs7QUFFRCxRQUFJLFlBQVksR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUM7QUFDakMsVUFBSSxFQUFFLElBQUk7QUFDVixjQUFRLEVBQUUsR0FBRztLQUNkLENBQUMsQ0FBQzs7QUFFSCxRQUFJLENBQUMsR0FBRyxZQUFZLENBQUMsS0FBSyxDQUFDO0FBQzNCLFFBQUksQ0FBQyxHQUFHLFlBQVksQ0FBQyxNQUFNLENBQUM7QUFDNUIsUUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUEsR0FBSSxDQUFDLENBQUMsQ0FBQzs7QUFFdEMsUUFBSSxXQUFXLEdBQUcsSUFBSSxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUM7O0FBRXJDLGVBQVcsQ0FBQyxPQUFPLENBQUM7QUFDbEIsWUFBTSxZQUFTLENBQUMsR0FBQyxFQUFFLENBQUEsWUFBTSxDQUFDLEdBQUMsRUFBRSxDQUFBLFVBQUksQ0FBQyxHQUFDLEVBQUUsQ0FBQSxVQUFJLE1BQU0sR0FBQyxDQUFDLENBQUEsVUFBSSxDQUFDLEdBQUMsRUFBRSxDQUFBLFNBQUksTUFBTSxVQUFJLENBQUMsR0FBQyxFQUFFLENBQUEsVUFBSSxNQUFNLEdBQUMsQ0FBQyxDQUFBLFVBQUksQ0FBQyxHQUFDLEVBQUUsQ0FBQSxZQUFNLENBQUMsR0FBQyxFQUFFLENBQUEsU0FBTTtBQUMvRyxVQUFJLEVBQUUsT0FBTztLQUNkLENBQUMsQ0FBQzs7QUFFSCxRQUFJLGlCQUFpQixHQUFHLElBQUksTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDO0FBQy9DLHFCQUFpQixDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQUUsWUFBWSxDQUFDLENBQUM7QUFDekQsZ0JBQVksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ25CLGdCQUFZLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNuQixxQkFBaUIsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUM7QUFDdEMscUJBQWlCLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDO0FBQ3RDLHFCQUFpQixDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7QUFDbkMscUJBQWlCLENBQUMsT0FBTyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7O0FBRW5DLFFBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDOztBQUV6RCxRQUFJLEdBQUcsWUFBWSxNQUFNLENBQUMsS0FBSyxFQUFFO0FBQy9CLFNBQUcsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLFlBQVk7QUFDM0IseUJBQWlCLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDO0FBQ3RDLHlCQUFpQixDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQztPQUN2QyxDQUFDLENBQUM7S0FDSjs7QUFFRCxRQUFJLEtBQUssR0FBRyxVQUFVLENBQUMsWUFBTTtBQUMzQixVQUFJLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUU7QUFDdkIsWUFBSSxLQUFLLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNoQyxZQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3ZELGtCQUFVLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO09BQ3hCO0tBQ0YsRUFBRSxJQUFJLENBQUMsQ0FBQzs7QUFFVCxjQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRTtBQUNsQixlQUFTLEVBQUUsaUJBQWlCO0FBQzVCLFdBQUssRUFBRSxLQUFLO0tBQ2IsQ0FBQyxDQUFDO0dBQ0osQ0FBQyxDQUFDO0NBR0osQ0FBQSxFQUFHLENBQUMiLCJmaWxlIjoiR2FtZVVJLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcblxuQS1SUEcgR2FtZSwgQnVpbHQgdXNpbmcgSmF2YVNjcmlwdCBFUzZcbkNvcHlyaWdodCAoQykgMjAxNSBxaGR1YW4oaHR0cDovL3FoZHVhbi5jb20pXG5cblRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cblRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cblxuKi9cblxuKGZ1bmN0aW9uICgpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgbGV0IHBvcHVwQ2FjaGUgPSBuZXcgTWFwKCk7XG5cbiAgR2FtZS5hc3NpZ24oXCJwb3B1cFwiLCBmdW5jdGlvbiAob2JqLCB0ZXh0LCBhZGp1c3RYID0gMCwgYWRqdXN0WSA9IDApIHtcblxuICAgIGlmIChwb3B1cENhY2hlLmhhcyhvYmopKSB7XG4gICAgICBsZXQgcG9wdXAgPSBwb3B1cENhY2hlLmdldChvYmopO1xuICAgICAgR2FtZS5sYXllcnMuZGlhbG9ndWVMYXllci5yZW1vdmVDaGlsZChwb3B1cC5jb250YWluZXIpO1xuICAgICAgY2xlYXJJbnRlcnZhbChwb3B1cC50aW1lcik7XG4gICAgICBwb3B1cENhY2hlLmRlbGV0ZShvYmopO1xuICAgIH1cblxuICAgIGxldCBkaWFsb2d1ZVRleHQgPSBuZXcgU3ByaXRlLlRleHQoe1xuICAgICAgdGV4dDogdGV4dCxcbiAgICAgIG1heFdpZHRoOiAyMDAsXG4gICAgfSk7XG5cbiAgICBsZXQgdyA9IGRpYWxvZ3VlVGV4dC53aWR0aDtcbiAgICBsZXQgaCA9IGRpYWxvZ3VlVGV4dC5oZWlnaHQ7XG4gICAgbGV0IG1pZGRsZSA9IE1hdGgucm91bmQoKHcgKyAxMCkgLyAyKTtcblxuICAgIGxldCBkaWFsb2d1ZUJveCA9IG5ldyBTcHJpdGUuU2hhcGUoKTtcblxuICAgIGRpYWxvZ3VlQm94LnBvbHlnb24oe1xuICAgICAgcG9pbnRzOiBgMCwwICR7dysxMH0sMCAke3crMTB9LCR7aCsxMH0gJHttaWRkbGUrNX0sJHtoKzEwfSAke21pZGRsZX0sJHtoKzE1fSAke21pZGRsZS01fSwke2grMTB9IDAsJHtoKzEwfSAwLDBgLFxuICAgICAgZmlsbDogXCJ3aGl0ZVwiXG4gICAgfSk7XG5cbiAgICBsZXQgZGlhbG9ndWVDb250YWluZXIgPSBuZXcgU3ByaXRlLkNvbnRhaW5lcigpO1xuICAgIGRpYWxvZ3VlQ29udGFpbmVyLmFwcGVuZENoaWxkKGRpYWxvZ3VlQm94LCBkaWFsb2d1ZVRleHQpO1xuICAgIGRpYWxvZ3VlVGV4dC54ID0gNTtcbiAgICBkaWFsb2d1ZVRleHQueSA9IDU7XG4gICAgZGlhbG9ndWVDb250YWluZXIueCA9IG9iai54ICsgYWRqdXN0WDtcbiAgICBkaWFsb2d1ZUNvbnRhaW5lci55ID0gb2JqLnkgKyBhZGp1c3RZO1xuICAgIGRpYWxvZ3VlQ29udGFpbmVyLmNlbnRlclggPSBtaWRkbGU7XG4gICAgZGlhbG9ndWVDb250YWluZXIuY2VudGVyWSA9IGggKyAxNTtcblxuICAgIEdhbWUubGF5ZXJzLmRpYWxvZ3VlTGF5ZXIuYXBwZW5kQ2hpbGQoZGlhbG9ndWVDb250YWluZXIpO1xuXG4gICAgaWYgKG9iaiBpbnN0YW5jZW9mIFNwcml0ZS5FdmVudCkge1xuICAgICAgb2JqLm9uKFwiY2hhbmdlXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZGlhbG9ndWVDb250YWluZXIueCA9IG9iai54ICsgYWRqdXN0WDtcbiAgICAgICAgZGlhbG9ndWVDb250YWluZXIueSA9IG9iai55ICsgYWRqdXN0WTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGxldCB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgaWYgKHBvcHVwQ2FjaGUuaGFzKG9iaikpIHtcbiAgICAgICAgbGV0IHBvcHVwID0gcG9wdXBDYWNoZS5nZXQob2JqKTtcbiAgICAgICAgR2FtZS5sYXllcnMuZGlhbG9ndWVMYXllci5yZW1vdmVDaGlsZChwb3B1cC5jb250YWluZXIpO1xuICAgICAgICBwb3B1cENhY2hlLmRlbGV0ZShvYmopO1xuICAgICAgfVxuICAgIH0sIDMwMDApO1xuXG4gICAgcG9wdXBDYWNoZS5zZXQob2JqLCB7XG4gICAgICBjb250YWluZXI6IGRpYWxvZ3VlQ29udGFpbmVyLFxuICAgICAgdGltZXI6IHRpbWVyXG4gICAgfSk7XG4gIH0pO1xuXG5cbn0pKCk7XG4iXX0=
