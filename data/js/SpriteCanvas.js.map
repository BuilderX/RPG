{"version":3,"sources":["src/SpriteCanvas.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,CAAC,YAAY;AACX,cAAY,CAAC;;AAEb,QAAM,CAAC,MAAM;iBAAS,MAAM;;aAEX,mBAAG;AAChB,YAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC9C,YAAI,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACjC,YAAI,EAAE,EAAE;AACN,iBAAO,IAAI,CAAC;SACb;AACD,eAAO,KAAK,CAAC;OACd;;;AAEW,aAXQ,MAAM,CAWb,KAAK,EAAE,MAAM,EAAE;4BAXR,MAAM;;AAYxB,UAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC9C,YAAM,CAAC,KAAK,GAAG,KAAK,IAAI,GAAG,CAAC;AAC5B,YAAM,CAAC,MAAM,GAAG,MAAM,IAAI,GAAG,CAAC;;AAE9B,UAAI,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;;AAEtC,UAAI,CAAC,OAAO,EAAE;AACZ,cAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;OAC1D;;AAED,aAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;;AAE7B,UAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AACtB,UAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;KACzB;;iBA1BmB,MAAM;;aA4BnB,kBAAG;;OAET;;;aAES,mBAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChD,YAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;AAC1E,iBAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACrB,gBAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;SAC5C;;AAED,YAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;OAChE;;;aAEK,iBAAG;AACP,YAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,OAAO,CAAC;AAClC,YAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;OACvE;;;WAES,eAAG;AACX,eAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;OAC3B;WAES,aAAC,KAAK,EAAE;AAChB,YAAI,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;AAC/B,cAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;SAC5B;OACF;;;WAEU,eAAG;AACZ,eAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;OAC5B;WAEU,aAAC,KAAK,EAAE;AACjB,YAAI,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AAChC,cAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;SAC7B;OACF;;;WAEU,eAAG;AACZ,eAAO,IAAI,CAAC,OAAO,CAAC;OACrB;WAEU,aAAC,KAAK,EAAE;AACjB,cAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;OACtD;;;WAxEmB,MAAM;MA2E3B,CAAC;CAEH,CAAA,EAAG,CAAC","file":"src/SpriteCanvas.js","sourcesContent":["/*\n\n2D Game Sprite Library, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n/// @file SpriteCanvas.js\n/// @namespace Sprite\n/// class Sprite.Canvas\n\n(function () {\n  \"use strict\";\n\n  Sprite.Canvas = class Canvas {\n\n    static support () {\n      var canvas = document.createElement(\"canvas\");\n      var gl = canvas.getContext(\"2d\");\n      if (gl) {\n        return true;\n      }\n      return false;\n    }\n\n    constructor (width, height) {\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = width || 640;\n      canvas.height = height || 480;\n\n      var context = canvas.getContext(\"2d\");\n\n      if (!context) {\n        throw new Error(\"Sprite.Canvas canvas is not supported\");\n      }\n\n      console.log(\"canvas inited\");\n\n      this._canvas = canvas;\n      this._context = context;\n    }\n\n    filter () {\n      // for now, only Sprite.Webgl could use .filter() method\n    }\n\n    drawImage (image, sx, sy, sw, sh, dx, dy, dw, dh) {\n      if (!image.width || !image.height || image.width <= 0 || image.height <= 0) {\n        console.error(image);\n        throw new Error(\"drawImage invalid image\");\n      }\n\n      this._context.drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh);\n    }\n\n    clear () {\n      this._context.fillStyle = \"black\";\n      this._context.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n\n    get width () {\n      return this._canvas.width;\n    }\n\n    set width (value) {\n      if (value != this._canvas.width) {\n        this._canvas.width = value;\n      }\n    }\n\n    get height () {\n      return this._canvas.height;\n    }\n\n    set height (value) {\n      if (value != this._canvas.height) {\n        this._canvas.height = value;\n      }\n    }\n\n    get canvas () {\n      return this._canvas;\n    }\n\n    set canvas (value) {\n      throw new Error(\"Sprite.Canvas.canvas cannot write\");\n    }\n\n\n  };\n\n})();\n"]}