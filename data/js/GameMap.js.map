{"version":3,"sources":["src/GameMap.js"],"names":[],"mappings":"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","file":"src/GameMap.js","sourcesContent":["/*\n\nA-RPG Game, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n(function () {\n  \"use strict\";\n\n\n  Game.Map = class GameMap extends Sprite.Event {\n    constructor (mapData) {\n      super();\n\n      this.data = mapData;\n      this.id = this.data.id;\n\n      if (this.data.entry) {\n        this.data.entry.x = this.data.entry.x * 32 + 16;\n        this.data.entry.y = this.data.entry.y * 32 + 16;\n      }\n\n      var imageUrls = [];\n      this.data.tilesets.forEach((element) => {\n        imageUrls.push(`/map/${element.image}`);\n      });\n\n      var loader = new Sprite.Loader();\n      loader.add(imageUrls);\n      loader.start();\n      loader.on(\"complete\", (event) => {\n        //console.log(\"mapData\", this.data);\n        this.sheet = new Sprite.Sheet({\n          images: event.data,\n          width: this.data.tilewidth,\n          height: this.data.tileheight,\n        });\n\n        // 计算阻挡地图，如果为object则有阻挡，undefined则无阻挡\n        this.blockedMap = [];\n        this.blockedMap.length = this.data.height;\n\n        for(var i = 0; i < this.blockedMap.length; i++) {\n          this.blockedMap[i] = [];\n          this.blockedMap[i].length = this.data.width;\n        }\n\n        // 保存这个地图的所有地图块\n        this.container = new Sprite.Container();\n        this.container.name = this.id;\n\n        this.data.layers.forEach((element, index, array) => {\n          var layer = element;\n\n          if (layer.data) { // 渲染普通层\n            for (var y = 0; y < layer.height; y++) {\n              for (var x = 0; x < layer.width; x++) {\n                var position = x + y * layer.width;\n                var picture = layer.data[position] - 1;\n                if (picture >= 0) {\n                  var spriteClone = this.sheet.clone();\n                  spriteClone.x = x * this.data.tilewidth;\n                  spriteClone.y = y * this.data.tileheight;\n                  spriteClone.play(picture);\n\n                  if (layer.properties && layer.properties.blocked) {\n                    this.blockedMap[y][x] = spriteClone;\n                  }\n\n                  this.container.appendChild(spriteClone);\n                }\n              }\n            }\n          } else { // 渲染对象层\n\n          }\n\n        });\n\n        this.width = this.data.width * this.data.tilewidth;\n        this.height = this.data.height * this.data.tileheight;\n\n        // 创建一个cache，地图很大可能会很大，所以以后可能还要想别的办法\n        // 这个cache会创建一个看不到的canvas\n        this.container.cache(0, 0, this.width, this.height);\n        this.minimap = this.container.cacheCanvas;\n\n        // 发送完成事件，第二个参数代表一次性事件\n        this.emit(\"complete\", true);\n      });\n\n    }\n\n    // 返回某个坐标点所在的地格\n    tile (x, y) {\n      x = x / this.data.tilewidth;\n      y = y / this.data.tileheight;\n      return {\n        x: Math.floor(x),\n        y: Math.floor(y)\n      };\n    }\n\n    // 绘制图片，会改变Game.currentArea\n    draw (layer) {\n      layer.clear();\n      layer.appendChild(this.container);\n\n      if (this.data.bgm) {\n        // set loop = -1, 无限循环\n        //var bgm = createjs.Sound.play(this.data.bgm, undefined, undefined, undefined, -1);\n        //bgm.setVolume(0.2);\n      }\n    }\n  };\n\n})();\n"]}