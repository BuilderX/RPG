{"version":3,"sources":["src/GameCollision.js"],"names":[],"mappings":"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","file":"src/GameCollision.js","sourcesContent":["/*\n\nA-RPG Game, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n(function () {\n  \"use strict\";\n\n  // 粗略计算地块是否和角色碰撞，主要是利用位置计算上是否有矩形的重叠\n  // 例如如果长方形A和长方形B左右重叠，则他们重叠在一起的宽会比AB各自的宽加一起要来的窄\n  function rectngleCollide (spriteA, spriteB, rectA, rectB) {\n    /*\n    以下图为例：\n    AA\n    AA\n        BB\n        BB\n    假设上面是两个图片，并且图片的x和y都在左上角\n     */\n\n    var data = {\n      x1: spriteA.x - rectA.center.x, // A的左上角x坐标\n      y1: spriteA.y - rectA.center.y, // A的左上角y坐标\n      x2: spriteB.x - rectB.center.x, // B的左上角x坐标\n      y2: spriteB.y - rectB.center.y, // B的左上角y坐标\n      w1: rectA.width, // A的宽\n      h1: rectA.height, // A的高\n      w2: rectB.width, // B的宽\n      h2: rectB.height, // B的高\n      x3: spriteA.x - rectA.center.x + rectA.width, // A的右上角\n      y3: spriteA.y - rectA.center.y + rectA.height, // A的左下角\n      x4: spriteB.x - rectB.center.x + rectB.width, // B的右上角\n      y4: spriteB.y - rectB.center.y + rectB.height // B的左下角\n    };\n\n    data.minX = Math.min(data.x1, data.x2); // 最小的x坐标，这里应该是A的左上角x坐标\n    data.minY = Math.min(data.y1, data.y2); // 最小的y坐标，这里应该是A的左上角y坐标\n    data.maxX = Math.max(data.x3, data.x4); // 最大的x坐标，这里应该是B的右上角x坐标\n    data.maxY = Math.max(data.y3, data.y4); // 最大的y坐标，这里应该是B的左下角y坐标\n\n    // 一个最大宽度和最大高度\n    // 宽度就是从A的左上角x坐标到B的右上角x坐标\n    // 高度就是从A的左上角y坐标到B的左下角y坐标\n    data.width = data.maxX - data.minX;\n    data.height = data.maxY - data.minY;\n\n    // 如果两个图形组成的最大宽，大于两个图片分别的最大宽，说明可能有交集\n    // 如果两个图形组成的最大高，大于两个图片分别的最大高，说明可能有交集\n    if( data.width < (rectA.width + rectB.width)\n    && data.height < (rectA.height + rectB.height) )\n      return data;\n    return false;\n  }  \n  \n  var canvasCollide = document.createElement(\"canvas\");\n  canvasCollide.width = 128;\n  canvasCollide.height = 128;\n  var contextCollide = canvasCollide.getContext(\"2d\");\n  // document.body.appendChild(canvasCollide);\n  \n  function pixelCollide (spriteA, spriteB, rectA, rectB, data,\n    deltaX, deltaY, deltaW, deltaH) {\n    // 对图像进行某种意义上的移动，例如把上面的图的A和B都平移到左上角，也就是AA的左上角变为0,0坐标\n\n    data.x1 -= data.minX;\n    data.x2 -= data.minX;\n    data.y1 -= data.minY;\n    data.y2 -= data.minY;\n\n    // contextCollide.clearRect(0, 0, data.width, data.height)\n    canvasCollide.width = data.width;\n    canvasCollide.height = data.height;\n    \n    // draw spriteA\n    contextCollide.drawImage(rectA.image,\n      rectA.x + deltaX, rectA.y + deltaY, data.w1 + deltaW, data.h1 + deltaH,\n      data.x1 + deltaX, data.y1 + deltaY, data.w1 + deltaW, data.h1 + deltaH);\n\n    var cropX = data.x1 + deltaX;\n    var cropY = data.y1 + deltaY;\n    var cropWidth = data.w1 + deltaW;\n    var cropHeight = data.h1 + deltaH;\n      \n    var pixelOld = contextCollide.getImageData(cropX, cropY, cropWidth, cropHeight).data;\n\n    // draw spriteB\n    contextCollide.drawImage(rectB.image,\n      rectB.x, rectB.y, data.w2, data.h2,\n      data.x2, data.y2, data.w2, data.h2);\n\n    var pixelNew = contextCollide.getImageData(cropX, cropY, cropWidth, cropHeight).data;\n\n    var collision = false;\n    \n    for (var i = 3; i < pixelOld.length; i += 3) {\n      if (pixelOld[i] > 0) {\n        if ( pixelOld[i] != pixelNew[i]\n          || pixelOld[i - 1] != pixelNew[i - 1]\n          || pixelOld[i - 2] != pixelNew[i - 2]\n          || pixelOld[i - 3] != pixelNew[i - 3]\n        ) {\n          collision = true;\n          break;\n        }\n      }\n    }\n\n    return collision;\n  }\n  \n  // 角色碰撞检测，先简单的矩形检测，如有碰撞可能则进行像素级检测\n  Game.actorCollision = function (actorSprite, blockSprite) {\n    // 角色只检测frame 0，因为角色老变动，避免卡住，只检测第一个frame\n    var actorRect = actorSprite.getFrame(0);\n    // 阻挡的块则检测当前frame，因为地块一般无变化\n    var blockRect = blockSprite.getFrame(blockSprite.currentFrame);\n\n    var data = rectngleCollide(actorSprite, blockSprite, actorRect, blockRect);\n    if (data) {\n      var actorHeight = data.h1;\n      // deltaY偏移0.7，大概意思是只检测角色最下方30%的地方\n      var deltaY = parseInt(actorHeight * 0.7);\n      var deltaH = -deltaY;\n      var result = pixelCollide(actorSprite, blockSprite, actorRect, blockRect, data, 0, deltaY, 0, deltaH);\n      \n      return result;\n    }\n    return false;\n  };\n\n  // 技能碰撞检测\n  Game.skillCollision = function (skillSprite, actorSprite) {\n    // 角色只检测frame 0，因为角色老变动，避免卡住，只检测第一个frame\n    var skillRect = skillSprite.getFrame(skillSprite.currentFrame);\n    //console.log(skillSprite.currentFrame);\n    // 阻挡的块则检测当前frame，因为地块一般无变化\n    var actorRect = actorSprite.getFrame(actorSprite.currentFrame);\n\n    var data = rectngleCollide(skillSprite, actorSprite, skillRect, actorRect);\n    if (data) {\n      //return true;\n      // 和角色碰撞检测对比，技能碰撞检测无delta\n      return pixelCollide(skillSprite, actorSprite, skillRect, actorRect, data, 0, 0, 0, 0);\n    }\n    return false;\n  };\n\n\n\n})();\n"]}