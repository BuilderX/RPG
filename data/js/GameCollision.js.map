{"version":3,"sources":["src/GameCollision.js"],"names":[],"mappings":"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","file":"src/GameCollision.js","sourcesContent":["/*\n\nA-RPG Game, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n(function () {\n  \"use strict\";\n\n  function boxCollide (spriteA, spriteB, rectA, rectB) {\n    var A = {\n      x: spriteA.x - rectA.centerX,\n      y: spriteA.y - rectA.centerY,\n      w: rectA.width,\n      h: rectA.height,\n      sx: rectA.x,\n      sy: rectA.y,\n      sw: rectA.width,\n      sh: rectA.height,\n      image: rectA.image\n    };\n\n    var B = {\n      x: spriteB.x - rectB.centerX,\n      y: spriteB.y - rectB.centerY,\n      w: rectB.width,\n      h: rectB.height,\n      sx: rectB.x,\n      sy: rectB.y,\n      sw: rectB.width,\n      sh: rectB.height,\n      image: rectB.image\n    };\n\n    var bigX = Math.max(A.x + A.w, B.x + B.w);\n    var smallX = Math.min(A.x, B.x);\n    var bigY = Math.max(A.y + A.h, B.y + B.h);\n    var smallY = Math.min(A.y, B.y);\n\n    var width = bigX - smallX;\n    var height = bigY - smallY;\n\n    if (width < (A.w + B.w) && height < (A.h + B.h)) {\n      return {\n        A: A,\n        B: B\n      };\n    }\n    return false;\n  }\n\n  var collideCavansCache = new Map();\n\n  function pixelCollide (A, B) {\n    // 对图像进行某种意义上的移动，例如把上面的图的A和B都平移到左上角，也就是AA的左上角变为0,0坐标\n\n    var now = (new Date().getTime());\n\n    // WWWHHH\n    var key = A.w * 1000 + A.h;\n    var canvas;\n    var context;\n    if (collideCavansCache.has(key)) {\n      canvas = collideCavansCache.get(key).canvas;\n      context = collideCavansCache.get(key).context;\n    } else {\n      canvas = document.createElement(\"canvas\");\n      canvas.width = A.w;\n      canvas.height = A.h;\n      context = canvas.getContext(\"2d\");\n      collideCavansCache.set(key, {\n        canvas: canvas,\n        context: context\n      });\n    }\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    // draw spriteA\n    context.globalCompositeOperation=\"source-over\"\n    context.drawImage(A.image,\n      A.sx, A.sy, A.sw, A.sh,\n      0, 0, A.w, A.h);\n\n    // draw spriteB\n    // 在source-in模式下，图像如果相交则显示，不相交则透明，所以判断如果有非透明就是相交\n    context.globalCompositeOperation=\"source-in\"\n    context.drawImage(B.image,\n      B.sx, B.sy, B.sw, B.sh,\n      B.x - A.x, B.y - A.y, B.w, B.h);\n\n    var pixel = context.getImageData(0, 0, A.w, A.h).data;\n\n    var collision = false;\n\n    for (var i = 3; i < pixel.length; i += 3) {\n      if (pixel[i] != 0) {\n        collision = true;\n      }\n    }\n\n    return collision;\n  }\n\n  // 角色碰撞检测，先简单的矩形检测，如有碰撞可能则进行像素级检测\n  Game.actorCollision = function (actorSprite, blockSprite) {\n    // 角色只检测frame 0，因为角色老变动，避免卡住，只检测第一个frame\n    var actorRect = actorSprite.getFrame(0);\n    // 阻挡的块则检测当前frame\n    var blockRect = blockSprite.getFrame();\n    var data = boxCollide(actorSprite, blockSprite, actorRect, blockRect);\n    if (data) {\n      // 计算一个delta，即只碰撞角色的下半部分\n      // deltaY偏移0.85，大概意思是只检测角色最下方15%的地方\n      var deltaY = Math.floor(actorRect.height * 0.85);\n      data.A.y += deltaY;\n      data.A.sy += deltaY;\n      data.A.h -= deltaY;\n      data.A.sh -= deltaY;\n\n      return pixelCollide(data.A, data.B);\n    }\n    return false;\n  };\n\n  // 技能碰撞检测\n  Game.skillCollision = function (skillSprite, actorSprite) {\n    var skillRect = skillSprite.getFrame();\n    var actorRect = actorSprite.getFrame();\n\n    var data = boxCollide(skillSprite, actorSprite, skillRect, actorRect);\n    if (data) {\n      // 和角色碰撞检测对比，技能碰撞检测无delta\n      return pixelCollide(data.A, data.B);\n    }\n    return false;\n  };\n\n\n\n})();\n"]}