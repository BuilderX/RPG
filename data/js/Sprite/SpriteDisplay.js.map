{"version":3,"sources":["src/Sprite/SpriteDisplay.js"],"names":[],"mappings":"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","file":"src/Sprite/SpriteDisplay.js","sourcesContent":["/*\n2D Game Sprite Library, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @fileoverview Class Sprite.Display\n * @author mail@qhduan.com (QH Duan)\n */\n\n(function (Sprite) {\n  \"use strict\";\n\n  let internal = Sprite.Namespace();\n\n  var hitCanvas = document.createElement(\"canvas\");\n  hitCanvas.width = 1;\n  hitCanvas.height = 1;\n  var hitContext = hitCanvas.getContext(\"2d\");\n  hitContext.clearRect(0, 0, 1, 1);\n  var hitData = hitContext.getImageData(0, 0, 1, 1).data;\n\n\n  /**\n   * Class Sprite.Display, base class for all other classes\n   * @class\n   * @extends Sprite.Event\n   */\n  Sprite.Display = class Display extends Sprite.Event {\n    /**\n     * construct Sprite.Display\n     * @constructor\n     */\n    constructor () {\n      super();\n      /**\n       * x position of object\n       @type {number}\n       */\n      internal(this).x = 0;\n      /**\n       * y position of object\n       @type {number}\n       */\n      internal(this).y = 0;\n      /**\n       * object's center x\n       @type {number}\n       */\n      internal(this).centerX = 0;\n      /**\n       * object's center y\n       @type {number}\n       */\n      internal(this).centerY = 0;\n      /**\n       * object's alpha, from 0 to 1, when alpha is 0, object is invisible\n       @type {number}\n       */\n      internal(this).alpha = 1;\n      /**\n       * object's visibility\n       @type {boolean}\n       */\n      internal(this).visible = true;\n    }\n    /**\n     * @return {number} return x position\n     */\n    get x () {\n      return internal(this).x;\n    }\n    /**\n     * @param {number} value new x position\n     */\n    set x (value) {\n      if (typeof value == \"number\" && !isNaN(value)) {\n        if (value != internal(this).x) {\n          internal(this).x = value;\n          this.emit(\"change\");\n        }\n      } else {\n        console.error(value, this);\n        throw new Error(\"Sprite.Display.set x : invalid argument\");\n      }\n    }\n    /**\n     * @return {number} return y position\n     */\n    get y () {\n      return internal(this).y;\n    }\n    /**\n     * @param {number} value new y position\n     */\n    set y (value) {\n      if (typeof value == \"number\" && !isNaN(value)) {\n        if (value != internal(this).y) {\n          internal(this).y = value;\n          this.emit(\"change\");\n        }\n      } else {\n        console.error(value, this);\n        throw new Error(\"Sprite.Display.set y : invalid argument\");\n      }\n    }\n    /**\n     * @return {number} return center x\n     */\n    get centerX () {\n      return internal(this).centerX;\n    }\n    /**\n     * @param {number} value new center x\n     */\n    set centerX (value) {\n      if (typeof value == \"number\" && !isNaN(value)) {\n        if (value != internal(this).centerX) {\n          internal(this).centerX = value;\n          this.emit(\"change\");\n        }\n      } else {\n        console.error(value, this);\n        throw new Error(\"Sprite.Display.set centerX : invalid argument\");\n      }\n    }\n    /**\n     * @return {number} return center y\n     */\n    get centerY () {\n      return internal(this).centerY;\n    }\n    /**\n     * @param {number} value new center y\n     */\n    set centerY (value) {\n      if (typeof value == \"number\" && !isNaN(value)) {\n        if (value != internal(this).centerY) {\n          internal(this).centerY = value;\n          this.emit(\"change\");\n        }\n      } else {\n        console.error(value, this);\n        throw new Error(\"Sprite.Display.set centerY : invalid argument\");\n      }\n    }\n    /**\n     * @return {number} return alpha\n     */\n    get alpha () {\n      return internal(this).alpha;\n    }\n    /**\n     * @param {number} value new alpha\n     */\n    set alpha (value) {\n      if (typeof value == \"number\" && !isNaN(value) && (value >= 0 || value <= 1)) {\n        if (value != internal(this).alpha) {\n          internal(this).alpha = value;\n          this.emit(\"change\");\n        }\n      } else {\n        console.error(value, this);\n        throw new Error(\"Sprite.Display.set alpha : invalid argument\");\n      }\n    }\n    /**\n     * @return {boolean} return alpha\n     */\n    get visible () {\n      return internal(this).visible;\n    }\n    /**\n     * @param {boolean} value new visible\n     */\n    set visible (value) {\n      if (value != internal(this).visible) {\n        internal(this).visible = value;\n        this.emit(\"change\");\n      }\n    }\n    /**\n     * Interface, sub-class should overload this method\n     * @param {Object} renderer\n     */\n    draw (renderer) {\n      throw new Error(\"Invalid call Sprite.Display.draw\");\n    }\n    /**\n     * Check if the x,y hit this object or not\n     * @param {number} x the x position for test\n     * @param {number} y the y position for test\n     */\n    hitTest (x, y) {\n      hitContext.clearRect(0, 0, 1, 1);\n      hitContext.save();\n      hitContext.translate(-x, -y);\n      this.draw(hitContext);\n      hitContext.restore();\n      var newData = hitContext.getImageData(0, 0, 1, 1).data;\n\n      if (hitData[0] != newData[0] || hitData[1] != newData[1] || hitData[2] != newData[2]) {\n        return true;\n      }\n      return false;\n    }\n    /**\n     * Draw an image to renderer\n     * x, y-----------------------------------------\n     * -                                           -\n     * -    sx.sy------------                      -\n     * -    -               -                      -\n     * -    ---swidth,sheight                      -\n     * -                                           -\n     * ---------------------------------------------image.width, image.height\n     * Crop image with sx, sy, swidth and sheight, draw it on renderer\n     * x, y will be calculated by this.x, this.y, this.centerX, this.centerY and some parents' attributes\n     * @param {Object} renderer A object who has drawImage method, eg. Sprite.Webgl\n     * @param {Object} image\n     * @param {number} sx\n     * @param {number} sy\n     * @param {number} swidth\n     * @param {number} sheight\n     */\n    drawImage (renderer, image, sx, sy, swidth, sheight) {\n      if (this.visible != internal(this).visible) {\n        throw new Error(\"ssss\");\n      }\n      if (this.visible == true && this.alpha > 0) {\n        let center = {\n          x: this.centerX,\n          y: this.centerY\n        };\n        let position = {\n          x: this.x,\n          y: this.y\n        };\n\n        let alpha = this.alpha;\n\n        var obj = this.parent;\n        while (obj) {\n          center.x += obj.centerX;\n          center.y += obj.centerY;\n          position.x += obj.x;\n          position.y += obj.y;\n          alpha *= obj.alpha;\n          if (alpha <= 0) {\n            return;\n          }\n          if (obj.visible == false) {\n            return;\n          }\n          obj = obj.parent;\n        }\n\n        var dx = position.x - center.x;\n        var dy = position.y - center.y;\n\n        renderer.alpha = alpha;\n        try {\n          renderer.drawImage(\n            image, sx, sy, swidth, sheight,\n            dx, dy, swidth, sheight\n          );\n        } catch (e) {\n          console.error(\n            image, sx, sy, swidth, sheight,\n            dx, dy, swidth, sheight\n          );\n          throw e;\n        }\n      }\n    }\n  };\n\n})(Sprite);\n"]}