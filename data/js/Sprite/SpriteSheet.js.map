{"version":3,"sources":["src/Sprite/SpriteSheet.js"],"names":[],"mappings":"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","file":"src/Sprite/SpriteSheet.js","sourcesContent":["/*import \"js/Sprite/SpriteDisplay\";\n\n2D Game Sprite Library, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n/**\n * @fileoverview Class Sprite.Sheet, maybe the most importent class\n * @author mail@qhduan.com (QH Duan)\n */\n\n(function () {\n \"use strict\";\n\n  let internal = Sprite.Namespace();\n\n  /**\n   * Class Sprite.Sheet, contain sprite's sheet and it's animation\n   * @class\n   * @extends Sprite.Display\n   */\n  Sprite.register(\"Sheet\", class SpriteSheet extends Sprite.Display {\n    /**\n     * construct Sprite.Sheet\n     * @param config\n     * @constructor\n     */\n    constructor (config) {\n      super();\n\n      if (\n          !config.images || !config.images.length ||\n          !Number.isInteger(config.width) || isNaN(config.width) || config.width <= 0 ||\n          !Number.isInteger(config.height) || isNaN(config.height) || config.height <= 0\n        ) {\n        console.error(config)\n        throw new Error(\"Sprite.Sheet.constructor get invalid arguments\");\n      }\n\n      /**\n       * Contain one or more images\n       @type {Array}\n       @private\n       */\n      internal(this).images = config.images;\n      /**\n       * Width of each frame\n       @type {number}\n       @private\n       */\n      internal(this).tilewidth = config.width;\n      /**\n       * Height of each frame\n       @type {number}\n       @private\n       */\n      internal(this).tileheight = config.height;\n      /**\n       * Animations of this sprite sheet, eg. { \"walkdown\": [0, 2, \"\", 40], \"walkup\", [3, 5, \"\", 40] }\n       @type {Object}\n       @private\n       */\n      internal(this).animations = config.animations || {};\n      /**\n       * Current animation's name, eg. \"walkdown\", \"attackright\"\n       @type {string}\n       @private\n       */\n      internal(this).currentAnimation = null;\n      /**\n       * Current frame number, eg. 0, 1, 2, 3\n       @type {number}\n       @private\n       */\n      internal(this).currentFrame = 0;\n      /**\n       * If animationTimer is not null, it points an animation is running\n       * it will be null or an handler from setInterval\n       @type {Object}\n       @private\n       */\n      internal(this).animationTimer = null;\n      /**\n       * Contain frames cache\n       @type {Array}\n       @private\n       */\n      internal(this).frames = [];\n\n      for (let image of internal(this).images) {\n        if (image && image.width && image.height) {\n          let col = Math.floor(image.width / internal(this).tilewidth);\n          let row = Math.floor(image.height / internal(this).tileheight);\n          for (let j = 0; j < row; j++) {\n            for (let i = 0; i < col; i++) {\n              internal(this).frames.push({\n                image: image,\n                x: i * internal(this).tilewidth,\n                y: j * internal(this).tileheight\n              });\n            }\n          }\n        } else {\n          console.error(image, internal(this).images, this);\n          throw new Error(\"Sprite.Sheet got an invalid image\");\n        }\n      }\n\n      /**\n       * The number of frames we have\n       @type {number}\n       @private\n       */\n      internal(this).frameCount = internal(this).frames.length;\n\n      if (internal(this).frameCount <= 0) {\n        console.error(internal(this).frames, this);\n        throw new Error(\"Sprite.Sheet got invalid frameCount, something wrong\");\n      }\n    }\n    /**\n     * Clone Sprite.Sheet object itself\n     * @return {Object} Return an copy of this\n     */\n    clone () {\n      let sheet = new Sprite.Sheet({\n        images: internal(this).images,\n        width: internal(this).tilewidth,\n        height: internal(this).tileheight,\n        animations: internal(this).animations\n      });\n      sheet.x = this.x;\n      sheet.y = this.y;\n      sheet.centerX = this.centerX;\n      sheet.centerY = this.centerY;\n      sheet.play(this.currentFrame);\n      return sheet;\n    }\n    /**\n     * @return {boolean} Return false if an animation is running\n     */\n    get paused () {\n      if (internal(this).animationTimer) {\n        return false;\n      }\n      return true;\n    }\n\n    set paused (value) {\n      throw new Error(\"Sprite.Sheet.paused readonly\");\n    }\n\n    /**\n     * @return {number} Return current frame number\n     */\n    get currentFrame () {\n      return internal(this).currentFrame;\n    }\n\n    set currentFrame (value) {\n      throw new Error(\"Sprite.Sheet.currentFrame readonly\");\n    }\n\n    /**\n     * @return {string} Return\n     */\n    get currentAnimation () {\n      return internal(this).currentAnimation;\n    }\n\n    set currentAnimation (value) {\n      throw new Error(\"Sprite.Sheet.currentAnimation readonly\");\n    }\n\n    /**\n     * Play a frame or an animation\n     * @param {Object} choice frame number of animation name, eg. 0 for frame or \"walkdown\" for animation\n     */\n    play (choice) {\n      if (internal(this).animationTimer) {\n        clearInterval(internal(this).animationTimer);\n        internal(this).animationTimer = null;\n      }\n\n      if (typeof choice == \"number\") {\n        // Argument points a frame\n        internal(this).currentFrame = choice;\n        this.emit(\"change\");\n      } else if (typeof choice == \"string\") {\n        // Argument points an animation name\n        let animation = internal(this).animations[choice];\n\n        if (!animation) { // if animation is not exist\n          console.error(animation, internal(this).animations, choice);\n          throw new Error(\"Sprite.Sheet.play invalid animation\");\n        }\n\n        // if animation is single frame number\n        if (typeof animation == \"number\") {\n          internal(this).currentAnimation = choice;\n          return this.play(animation);\n        }\n\n        // start frame number\n        let begin = null;\n        // finish frame number\n        let end = null;\n        // what action after animation finished\n        let next = null;\n        // the space between each frame, ms\n        let time = null;\n\n        if (animation instanceof Array) {\n          // if animation format is like [begin, end, next, time]\n          begin = animation[0];\n          end = animation[1];\n          next = animation[2];\n          time = animation[3];\n        } else if (animation.frames && animation.frames instanceof Array) {\n          // if animation format is like { frames: [begin, end], next: \"next\", speed: \"time\" }\n          begin = animation.frames[0];\n          end = animation.frames[animation.frames.length - 1];\n          next = animation.next;\n          time = animation.speed;\n        }\n\n        if ( // Data ensure\n          typeof begin != \"number\" || begin < 0 || begin >= internal(this).frameCount ||\n          typeof end != \"number\" || end < 0 || end >= internal(this).frameCount ||\n          typeof time != \"number\" || time <= 0\n        ) {\n          console.error(begin, end, time, this);\n          throw new Error(\"Sprite.Sheet.play Invalid animation data\");\n        }\n\n        // Play first frame in animation\n        internal(this).currentAnimation = choice;\n        internal(this).currentFrame = begin;\n        this.emit(\"change\");\n\n        // Play other frame in animation\n        internal(this).animationTimer = setInterval(() => {\n          internal(this).currentFrame++;\n\n          if (internal(this).currentFrame > end) {\n            clearInterval(internal(this).animationTimer);\n            internal(this).animationTimer = null;\n\n            if (next && next.length && internal(this).animations[next]) {\n              this.play(next);\n            } else {\n              internal(this).currentFrame--;\n            }\n            this.emit(\"animationend\");\n          }\n\n          this.emit(\"change\");\n        }, time);\n\n      } else {\n        console.error(choice, internal(this).animations, this);\n        throw new Error(\"Sprite.Sheet.play has an invalid argument\");\n      }\n    }\n\n    /**\n     * Get a certain frame\n     * @param {number} index The index of frame\n     * @return {Object} An Sprite.Frame object\n     */\n    getFrame (index) {\n      if (!Number.isInteger(index)) {\n        index = internal(this).currentFrame;\n      }\n      if (index < 0 || index >= internal(this).frameCount) {\n        console.error(index, this);\n        throw new Error(\"Sprite.Sheet.getFrame invalid index\")\n      }\n      let frame = internal(this).frames[index];\n      let frameObj = new Sprite.Frame(\n        frame.image,\n        frame.x,\n        frame.y,\n        internal(this).tilewidth,\n        internal(this).tileheight\n      );\n      frameObj.parent = this;\n      return frameObj;\n    }\n\n    /**\n     * Draw this sheet on certain renderer\n     * @param {Object} renderer A renderer engine, eg. Sprite.Webgl\n     */\n    draw (renderer) {\n      let frame = this.getFrame(this.currentFrame);\n\n      if (!frame || !frame.image) {\n        console.error(frame, this.currentFrame, this);\n        throw new Error(\"Sprite.Sheet.draw invalid frame\");\n      }\n\n      frame.draw(renderer);\n    }\n\n  });\n\n\n})();\n"]}