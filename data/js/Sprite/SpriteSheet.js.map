{"version":3,"sources":["src/Sprite/SpriteSheet.js"],"names":[],"mappings":"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","file":"src/Sprite/SpriteSheet.js","sourcesContent":["/*\n\n2D Game Sprite Library, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n/// @file SpriteSheet.js\n/// @namespace Sprite\n/// class Sprite.Sheet\n\n(function (Sprite) {\n  \"use strict\";\n\n  Sprite.Sheet = class Sheet extends Sprite.Display {\n    constructor (config) {\n      super();\n\n      if (!config.images || !config.width || !config.height) {\n        console.log(config)\n        throw new TypeError(\"Sprite.Sheet.constructor get invalid arguments\");\n      }\n\n      this._images = config.images;\n      this._tilewidth = config.width;\n      this._tileheight = config.height;\n      this._animations = config.animations || {};\n      this._currentAnimation = null;\n      this._currentFrame = 0;\n      this._animationTimer = null;\n\n      this._frames = [];\n\n      this._images.forEach((image) => {\n        var col = Math.floor(image.width / this._tilewidth);\n        var row = Math.floor(image.height / this._tileheight);\n        for (let j = 0; j < row; j++) {\n          for (let i = 0; i < col; i++) {\n            this._frames.push({\n              image: image,\n              x: i * this._tilewidth,\n              y: j * this._tileheight\n            });\n          }\n        }\n      });\n\n    }\n\n    clone () {\n      var sheet = new Sheet({\n        images: this._images,\n        width: this._tilewidth,\n        height: this._tileheight,\n        animations: this._animations\n      });\n      sheet.x = this.x;\n      sheet.y = this.y;\n      sheet.centerX = this.centerX;\n      sheet.centerY = this.centerY;\n      sheet.scaleX = this.scaleX;\n      sheet.scaleY = this.scaleY;\n      sheet._currentFrame = this._currentFrame;\n      return sheet;\n    }\n\n    get paused () {\n      if (this._animationTimer)\n        return false;\n      return true;\n    }\n\n    set paused (value) {\n      throw new Error(\"Sprite.Sheet 'paused' readonly\");\n    }\n\n    get currentFrame () {\n      return this._currentFrame;\n    }\n\n    set currentFrame (value) {\n      throw new Error(\"Sprite.Sheet.currentFrame readonly\");\n    }\n\n    get currentAnimation () {\n      return this._currentAnimation;\n    }\n\n    set currentAnimation (value) {\n      throw new Error(\"Sprite.Sheet.currentAnimation readonly\");\n    }\n\n    play (choice) {\n      if (this._animationTimer) {\n        clearInterval(this._animationTimer);\n        this._animationTimer = null;\n      }\n\n      if (typeof choice == \"number\") {\n        this._currentFrame = choice;\n        this.emit(\"change\");\n      } else if (typeof choice == \"string\") {\n\n        var animation = this._animations[choice];\n\n        if (!animation) {\n          console.error(animation, this._animations, choice);\n          throw new Error(\"Sprite.Sheet.play invalid animation\");\n        }\n\n        // if animation is single frame number\n        if (typeof animation == \"number\") {\n          this._currentAnimation = choice;\n          this.play(animation);\n          return;\n        }\n\n        var begin;\n        var end;\n        var next;\n        var time;\n\n        if (animation instanceof Array) {\n          begin = animation[0];\n          end = animation[1];\n          next = animation[2];\n          time = animation[3];\n        } else if (animation.frames instanceof Array) {\n          begin = animation.frames[0];\n          end = animation.frames[animation.frames.length - 1];\n          next = animation.next;\n          time = animation.speed;\n        }\n\n        if (typeof begin != \"number\" || typeof end != \"number\" || typeof time != \"number\") {\n          console.error(begin, end, time);\n          throw new Error(\"Sprite.Sheet.play Invalid Sheet Data\");\n        }\n\n        this._currentAnimation = choice;\n        this._currentFrame = begin;\n        this.emit(\"change\");\n\n        this._animationTimer = setInterval(() => {\n          this._currentFrame++;\n          if (this._currentFrame > end) {\n            clearInterval(this._animationTimer);\n            this._animationTimer = null;\n            if (next && next.length && this._animations[next]) {\n              this.play(next);\n            } else {\n              this._currentFrame--;\n            }\n            this.emit(\"animationend\");\n          }\n          this.emit(\"change\");\n        }, time);\n      } else {\n        throw new Error(\"Sprite.Sheet.play has an invalid argument\");\n      }\n    }\n\n    getFrame (index) {\n      if (typeof index != \"number\") {\n        index = this.currentFrame;\n      }\n      var frame = this._frames[index];\n      var frameObj = new Sprite.Frame(frame.image, frame.x, frame.y,\n        this._tilewidth, this._tileheight);\n      frameObj.parent = this;\n      return frameObj;\n    }\n\n    draw (renderer) {\n      var frame = this.getFrame(this.currentFrame);\n      if (!frame || !frame.image) {\n        console.error(frame, this.currentFrame, this);\n        throw new Error(\"Sprite.Sheet.draw invalid frame\");\n      }\n      frame.draw(renderer);\n    }\n\n  };\n\n})(Sprite);\n"]}