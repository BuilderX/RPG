{"version":3,"sources":["src/Sprite/SpriteStage.js"],"names":[],"mappings":"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","file":"src/Sprite/SpriteStage.js","sourcesContent":["/*\n\n2D Game Sprite Library, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n/**\n * @fileoverview Class Sprite.Stage\n * @author mail@qhduan.com (QH Duan)\n */\n\n(function (Sprite) {\n  \"use strict\";\n\n  let internal = Sprite.Namespace();\n\n  /**\n   * Main Stage, display object\n   * @class\n   * @extends Sprite.Container\n   */\n  Sprite.Stage = class SpriteStage extends Sprite.Container {\n\n    /** @function Sprite.Stage.constructor\n     * consturct a Sprite.Stage with width and height\n     * @constructor\n     * @param width, the width of stage you need\n     * @param height, the height of stage you need\n     */\n    constructor (width, height) {\n      super();\n\n      if (Sprite.Webgl.support()) {\n        internal(this).renderer = new Sprite.Webgl(width, height);\n        internal(this).rendererType = \"webgl\";\n      } else if (Sprite.Canvas.support()) {\n        internal(this).renderer = new Sprite.Canvas(width, height);\n        internal(this).rendererType = \"canvas\";\n      } else {\n        throw new Error(\"Sprite.Stage all renderer not support\");\n      }\n\n      internal(this).color = \"#000000\";\n\n      internal(this).screenshot = null;\n    }\n\n    get renderer () {\n      return internal(this).renderer;\n    }\n\n    set renderer (value) {\n      throw new Error(\"Sprite.Stage renderer readonly\");\n    }\n\n    get rendererType () {\n      return internal(this).rendererType;\n    }\n\n    set rendererType (value) {\n      throw new Error(\"Sprite.Stage.rendererType readonly\")\n    }\n\n    filter (name, value) {\n      return internal(this).renderer.filter(name, value);\n    }\n\n    findHit (event) {\n      let hitted = this.hitTest(this.mouseX, this.mouseY);\n      hitted.reverse();\n      if (hitted.length)\n        return hitted;\n      return null;\n    }\n\n    get width () {\n      return internal(this).renderer.width;\n    }\n\n    set width (value) {\n      internal(this).renderer.width = value;\n    }\n\n    get height () {\n      return internal(this).renderer.height;\n    }\n\n    set height (value) {\n      internal(this).renderer.height = value;\n    }\n\n    get color () {\n      return internal(this).renderer.color;\n    }\n\n    set color (value) {\n      internal(this).renderer.color = value;\n    }\n\n    get canvas () {\n      return this.renderer.canvas;\n    }\n\n    set canvas (value) {\n      throw new Error(\"Sprite.Stage.canvas readonly\")\n    }\n\n    /// @function Sprite.Stage.clear\n    /// clear the stage\n    clear () {\n      internal(this).renderer.clear();\n    }\n\n    update () {\n      this.draw();\n    }\n\n    requestScreenshot (callback) {\n      internal(this).screenshot = function (url) {\n        let img = new Image();\n        img.src = url;\n        if (img.complete) {\n          callback(img);\n        } else {\n          img.onload = function () {\n            callback(img);\n          };\n        }\n      };\n    }\n\n    draw () {\n      this.emit(\"drawStart\");\n\n      if (this.children.length <= 0) {\n        return false;\n      }\n\n      this.clear();\n\n      for (let child of this.children) {\n        child.draw(this.renderer);\n      }\n\n      if (internal(this).screenshot) {\n        internal(this).screenshot(this.canvas.toDataURL());\n        internal(this).screenshot = null;\n      }\n\n      this.emit(\"drawEnd\");\n    }\n\n  };\n\n})(Sprite);\n"]}