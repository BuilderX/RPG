{"version":3,"sources":["src/Sprite/SpriteEvent.js"],"names":[],"mappings":"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","file":"src/Sprite/SpriteEvent.js","sourcesContent":["/*\n\n2D Game Sprite Library, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n/**\n * @fileoverview Class Sprite.Event\n * @author mail@qhduan.com (QH Duan)\n */\n\n(function () {\n \"use strict\";\n\n  let internal = Sprite.Namespace();\n\n  /**\n   * Class Sprite.Event, hold all events emit, bubble\n   * @class\n   */\n  Sprite.register(\"Event\", class SpriteEvent {\n    /**\n     * construct Sprite.Event\n     * @constructor\n     */\n    constructor () {\n      /**\n       * Contain all event and its' listeners\n       @type {Object}\n       @private\n       */\n      internal(this).listeners = new Map();\n      /**\n       * Contain an event is once or not\n       * @type {Object}\n       * @private\n       */\n      internal(this).once = new Map();\n      /**\n       * Parent of this object\n       * @type {Object}\n       */\n      internal(this).parent = null;\n    }\n    /**\n     * @return {Object} parent we hold, an object or null\n     */\n    get parent () {\n      return internal(this).parent;\n    }\n    /**\n     * Set parent of object\n     * @param {Object} value New parent value, or null\n     */\n    set parent (value) {\n      internal(this).parent = value;\n    }\n    /**\n     * Register an event\n     * @param {string} event The event type, eg. \"click\"\n     * @param {function} listener The callback function when event fired\n     */\n    on (event, listener) {\n      // If event is an once event, when some client register this event after event fired, we just return it\n      if (internal(this).once.has(event)) {\n        listener({\n          type: event,\n          target: this,\n          data: internal(this).once.get(event)\n        });\n        return null;\n      } else {\n        if (internal(this).listeners.has(event) == false) {\n          internal(this).listeners.set(event, new Map());\n        }\n\n        let id = Sprite.uuid();\n        internal(this).listeners.get(event).set(id, listener);\n        return id;\n      }\n    }\n    /**\n     * Remove an event Register\n     * @param {string} event The event type you want to remove. eg. \"click\"\n     * @param {string} id The id of event, the id is what returned by \"on\" function\n     */\n    off (event, id) {\n      if (internal(this).listeners.has(event) && internal(this).listeners.get(event).has(id)) {\n        internal(this).listeners.get(event).delete(id);\n        if (internal(this).listeners.get(event).size <= 0) {\n          internal(this).listeners.delete(event);\n        }\n        return true;\n      }\n      return false;\n    }\n    /**\n     * Fire an event from children\n     * @param {string} event Event type\n     * @param {Object} target Event target\n     * @param {Object} data Data\n     */\n    emitBubble (event, target, data) {\n      let bubble = true;\n\n      if (internal(this).listeners.has(event)) {\n        for (let listener of internal(this).listeners.get(event).values()) {\n          if (listener({ type: event, target: target, data: data }) === false) {\n            // If client return just \"false\", stop propagation\n            bubble = false;\n          }\n        }\n      }\n\n      if (\n        internal(this).parent &&\n        bubble == true\n      ) {\n        internal(this).parent.emitBubble(event, target, data);\n      }\n    }\n    /**\n     * Fire an event\n     * @param {string} event The event type you want to fire\n     * @param {boolean} once Whether or not the event is once, if true, the event fire should only once, like \"complete\"\n     * @param {Object} data The data to listener, undefined or null is OK\n     */\n    emit (event, once, data) {\n      if (once) {\n        if (typeof data != \"undefined\") {\n          internal(this).once.set(event, data);\n        } else {\n          internal(this).once.set(event, null);\n        }\n      }\n\n      // wheter or not bubble the event, default true\n      let bubble = true;\n\n      if (internal(this).listeners.has(event)) {\n        for (let listener of internal(this).listeners.get(event).values()) {\n          if (listener({ type: event, target: this, data: data }) === false) {\n            // If client return just \"false\", stop propagation\n            bubble = false;\n          }\n        }\n      }\n\n      if (\n        internal(this).parent &&\n        bubble == true\n      ) {\n        internal(this).parent.emitBubble(event, this, data);\n      }\n    }\n  });\n\n\n})();\n"]}