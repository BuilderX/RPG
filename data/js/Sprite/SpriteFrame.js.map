{"version":3,"sources":["src/Sprite/SpriteFrame.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,CAAC,YAAY;AACZ,cAAY,CAAC;;AAEZ,MAAI,QAAQ,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;;;;;;AAMlC,QAAM,CAAC,MAAM,CAAC,OAAO;cAAQ,WAAW;;AAE1B,aAFe,WAAW,CAEzB,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE;4BAFhB,WAAW;;AAGpC,iCAHyB,WAAW,6CAG5B;AACR,UAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC9B,cAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,cAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;AACjB,cAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;AACjB,cAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,cAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;KAC1B;;;;;;iBAV0B,WAAW;;;;;;aA4EhC,iBAAG;AACP,YAAI,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,CAC1B,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAChB,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CACxB,CAAC;AACF,aAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AACjB,aAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AACjB,aAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,eAAO,KAAK,CAAC;OACd;;;;;;;aAKI,cAAC,QAAQ,EAAE;AACd,YAAI,CAAC,SAAS,CACZ,QAAQ,EAAE,IAAI,CAAC,KAAK,EACpB,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAChB,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CACxB,CAAC;OACH;;;WAnFS,eAAG;AACX,YAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC9B,eAAO,QAAQ,CAAC,KAAK,CAAC;OACvB;WAES,aAAC,KAAK,EAAE;AAChB,cAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;OAChD;;;;;;;WAKM,eAAG;AACR,YAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC9B,eAAO,QAAQ,CAAC,EAAE,CAAC;OACpB;WAEM,aAAC,KAAK,EAAE;AACb,cAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;OAC7C;;;;;;;WAKM,eAAG;AACR,YAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC9B,eAAO,QAAQ,CAAC,EAAE,CAAC;OACpB;WAEM,aAAC,KAAK,EAAE;AACb,cAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;OAC7C;;;;;;;WAKS,eAAG;AACX,YAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC9B,eAAO,QAAQ,CAAC,KAAK,CAAC;OACvB;WAES,aAAC,KAAK,EAAE;AAChB,eAAO,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC3B,cAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;OAChD;;;;;;;WAKU,eAAG;AACZ,YAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC9B,eAAO,QAAQ,CAAC,MAAM,CAAC;OACxB;WAEU,aAAC,KAAK,EAAE;AACjB,eAAO,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC3B,cAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;OACjD;;;WAvE0B,WAAW;KAAS,MAAM,CAAC,OAAO,EAmG7D,CAAC;CAGJ,CAAA,EAAG,CAAC","file":"src/Sprite/SpriteFrame.js","sourcesContent":["/*\n\n2D Game Sprite Library, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n/**\n * @fileoverview Class Sprite.Frame\n * @author mail@qhduan.com (QH Duan)\n */\n\n(function () {\n \"use strict\";\n\n  let internal = Sprite.Namespace();\n\n  /**\n   * Class Sprite.Frame, a frame of Sprite.Sheet\n   * @class\n   */\n  Sprite.assign(\"Frame\", class SpriteFrame extends Sprite.Display {\n\n    constructor (image, sx, sy, width, height) {\n      super();\n      let privates = internal(this);\n      privates.image = image;\n      privates.sx = sx;\n      privates.sy = sy;\n      privates.width = width;\n      privates.height = height;\n    }\n    /**\n     * @return {Image} Return the image this Sprite.Frame hold\n     */\n    get image () {\n      let privates = internal(this);\n      return privates.image;\n    }\n\n    set image (value) {\n      throw new Error(\"Sprite.Frame.image readonly\");\n    }\n\n    /**\n     * @return {number} Return sx\n     */\n    get sx () {\n      let privates = internal(this);\n      return privates.sx;\n    }\n\n    set sx (value) {\n      throw new Error(\"Sprite.Frame.sx readonly\");\n    }\n\n    /**\n     * @return {number} Return sy\n     */\n    get sy () {\n      let privates = internal(this);\n      return privates.sy;\n    }\n\n    set sy (value) {\n      throw new Error(\"Sprite.Frame.sy readonly\");\n    }\n\n    /**\n     * @return {number} return width\n     */\n    get width () {\n      let privates = internal(this);\n      return privates.width;\n    }\n\n    set width (value) {\n      console.error(value, this);\n      throw new Error(\"Sprite.Frame.width readonly\");\n    }\n\n    /**\n     * @return {number} return height\n     */\n    get height () {\n      let privates = internal(this);\n      return privates.height;\n    }\n\n    set height (value) {\n      console.error(value, this);\n      throw new Error(\"Sprite.Frame.height readonly\");\n    }\n\n    /**\n     * @return {Object} Clone this Sprite.Frame\n     */\n    clone () {\n      let frame = new Sprite.Frame(\n        this.image,\n        this.sx, this.sy,\n        this.width, this.height\n      );\n      frame.x = this.x;\n      frame.y = this.y;\n      frame.parent = this.parent;\n      return frame;\n    }\n\n    /**\n     * @param {Object} renderer\n     */\n    draw (renderer) {\n      this.drawImage(\n        renderer, this.image,\n        this.sx, this.sy,\n        this.width, this.height\n      );\n    }\n\n  });\n\n\n})();\n"]}