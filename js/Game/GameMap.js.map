{"version":3,"sources":["src/Game/GameMap.js"],"names":[],"mappings":"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","file":"src/Game/GameMap.js","sourcesContent":["/*\n\nA-RPG Game, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n(function () {\n  \"use strict\";\n\n  let internal = Sprite.Namespace();\n\n  Game.assign(\"Map\", class GameMap extends Sprite.Event {\n\n    hitTest (x, y) {\n      if (internal(this).blockedMap.has(x*10000+y)) {\n        return true;\n      }\n      return false;\n    }\n\n    hitWater (x, y) {\n      if (internal(this).waterMap.has(x*10000+y)) {\n        return true;\n      }\n      return false;\n    }\n\n    hitAutoHide (x, y) {\n      if (internal(this).autoHideMap.has(x*10000+y)) {\n        return internal(this).autoHideMap.get(x*10000+y);\n      }\n      return null;\n    }\n\n    constructor (mapData) {\n      super();\n      let privates = internal(this);\n\n      privates.data = mapData;\n\n      let mapTilesetLoader = Sprite.Loader.create();\n      for (let element of privates.data.tilesets) {\n        mapTilesetLoader.add(`map/${element.image}`);\n      };\n\n\n      mapTilesetLoader.start().on(\"complete\", (event) => {\n\n        privates.sheet = new Sprite.Sheet({\n          images: event.data,\n          width: privates.data.tilewidth,\n          height: privates.data.tileheight,\n        });\n\n        // 水地图，用来进行hitWater测试\n        privates.waterMap = new Map();\n        // 计算阻挡地图，如果为object则有阻挡，undefined则无阻挡\n        privates.blockedMap = new Map();\n        // 某些层在玩家走到其中后会自动隐藏\n        privates.autoHideMap = new Map();\n\n        // 保存这个地图的所有地图块\n        privates.layers = [];\n\n        privates.data.layers.forEach((element, index, array) => {\n          let layer = element;\n\n          if (layer.name == \"block\") {\n            // 阻挡层，有东西则表示阻挡\n            if (layer.hasOwnProperty(\"data\")) {\n              for (let y = 0; y < layer.height; y++) {\n                for (let x = 0; x < layer.width; x++) {\n                  let position = x + y * layer.width;\n                  let picture = layer.data[position] - 1;\n                  if (picture >= 0) {\n                    privates.blockedMap.set(x*10000+y, true);\n                  }\n                }\n              }\n            } else {\n              console.error(layer, this.data);\n              throw new Error(\"Game.Map got invalid block layer\");\n            }\n          } else if (layer.name == \"water\") {\n            // 水层，用来钓鱼\n            if (layer.hasOwnProperty(\"data\")) {\n              for (let y = 0; y < layer.height; y++) {\n                for (let x = 0; x < layer.width; x++) {\n                  let position = x + y * layer.width;\n                  let picture = layer.data[position] - 1;\n                  if (picture >= 0) {\n                    privates.waterMap.set(x*10000+y, true);\n                  }\n                }\n              }\n            } else {\n              console.error(layer, this.data);\n              throw new Error(\"Game.Map got invalid water layer\");\n            }\n          } else {\n            let layerObj = new Sprite.Container();\n            layerObj.name = layer.name;\n\n            privates.layers.push(layerObj);\n\n            if (layer.hasOwnProperty(\"data\")) { // 渲染普通层\n              for (let y = 0; y < layer.height; y++) {\n                for (let x = 0; x < layer.width; x++) {\n                  let position = x + y * layer.width;\n                  let picture = layer.data[position] - 1;\n                  if (picture >= 0) {\n                    let frame = privates.sheet.getFrame(picture);\n                    frame.x = x * privates.data.tilewidth;\n                    frame.y = y * privates.data.tileheight;\n\n                    if (layer.properties && layer.properties.autohide) {\n                      privates.autoHideMap.set(x*10000+y, layer.properties.autohide);\n                    }\n\n                    layerObj.appendChild(frame);\n                  }\n                }\n              }\n            } else {\n              console.error(layer, this.data);\n              throw new Error(\"Game.Map got invalid layer\");\n            }\n          }\n\n        });\n\n        // 发送完成事件，第二个参数代表此事件是一次性事件，即不会再次complete\n        this.emit(\"complete\", true);\n      });\n\n    }\n\n    get data () {\n      return internal(this).data;\n    }\n\n    set data (value) {\n      throw new Error(\"Game.Map.data readonly\");\n    }\n\n    get id () {\n      return internal(this).id;\n    }\n\n    set id (value) {\n      throw new Error(\"Game.Map.id readonly\");\n    }\n\n    get width () {\n      return this.data.width * this.data.tilewidth;\n    }\n\n    set width (value) {\n      throw new Error(\"Game.Map.width readonly\");\n    }\n\n    get height () {\n      return this.data.height * this.data.tileheight;\n    }\n\n    set height (value) {\n      throw new Error(\"Game.Map.height readonly\");\n    }\n\n    get col () { // width / tilewidth\n      return this.data.width;\n    }\n\n    set col (value) {\n      throw new Error(\"Game.Map.col readonly\");\n    }\n\n    get row () { // height / tileheight\n      return this.data.height\n    }\n\n    set row (value) {\n      throw new Error(\"Game.Map.row readonly\");\n    }\n\n    get minimap () {\n      return internal(this).minimap;\n    }\n\n    set minimap (value) {\n      throw new Error(\"Game.Map.minimap readonly\");\n    }\n\n    // 返回某个坐标点所在的地格\n    tile (x, y) {\n      if (x && typeof y == \"undefined\" && Number.isFinite(x.x) && Number.isFinite(x.y)) {\n        return {\n          x: Math.floor(x.x / this.data.tilewidth),\n          y: Math.floor(x.y / this.data.tileheight)\n        };\n      } else if (Number.isFinite(x) && Number.isFinite(y)) {\n        return {\n          x: Math.floor(x / this.data.tilewidth),\n          y: Math.floor(y / this.data.tileheight)\n        };\n      } else {\n        console.error(x, y);\n        throw new Error(\"Game.Map.tile Invalid arguments\");\n      }\n    }\n\n    // 绘制图片，会改变Game.currentArea\n    draw () {\n      let privates = internal(this);\n      Game.layers.mapLayer.clear();\n\n      let autohideLayer = {};\n\n      privates.layers.forEach((element, index) => {\n        let layerData = privates.data.layers[index];\n\n        if (Number.isFinite(layerData.opacity)) {\n          element.alpha = layerData.opacity;\n        }\n\n        if (layerData.properties && layerData.properties.autohide) {\n          let group = layerData.properties.autohide;\n          if (autohideLayer[group]) {\n            autohideLayer[group].push(element);\n          } else {\n            autohideLayer[group] = [element];\n          }\n        } else {\n          Game.layers.mapLayer.appendChild(element);\n        }\n\n      });\n\n      for (let key in autohideLayer) {\n        let container = new Sprite.Container();\n        container.name = key;\n        for (let element of autohideLayer[key]) {\n          container.appendChild(element);\n        }\n        container.cache(0, 0, this.width, this.height);\n        Game.layers.mapHideLayer.appendChild(container);\n      }\n\n      Game.layers.mapLayer.cache(0, 0, this.width, this.height);\n      Game.layers.mapHideLayer.cache(0, 0, this.width, this.height);\n\n      let minimap = document.createElement(\"canvas\");\n      minimap.width = this.col * 8; // 原地图的四倍\n      minimap.height = this.row * 8;\n      let minimapContext = minimap.getContext(\"2d\");\n      minimapContext.drawImage(Game.layers.mapLayer.cacheCanvas,\n        0, 0, this.width, this.height, 0, 0, minimap.width, minimap.height);\n      minimapContext.drawImage(Game.layers.mapHideLayer.cacheCanvas,\n        0, 0, this.width, this.height, 0, 0, minimap.width, minimap.height);\n\n      privates.minimap = minimap;\n\n      Game.layers.mapHideLayer.clearCache();\n\n      if (privates.data.bgm) {\n        // set loop = -1, 无限循环\n        //let bgm = createjs.Sound.play(this.data.bgm, undefined, undefined, undefined, -1);\n        //bgm.setVolume(0.2);\n      }\n    }\n  });\n\n\n})();\n"]}