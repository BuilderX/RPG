{"version":3,"sources":["src/Game/GameWorker.js"],"names":[],"mappings":"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","file":"src/Game/GameWorker.js","sourcesContent":["/*\n\nA-RPG Game, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nself.addEventListener(\"message\", function(event) {\n  let data = event.data;\n  let id = data.id;\n  let blockedMap = data.blockedMap;\n  let blocked = data.blocked;\n  let width = data.width;\n  let height = data.height;\n  let start = data.start;\n  let end = data.end;\n\n  let result = path (function (x, y) {\n    if (blockedMap.has(x*10000+y) || blocked.has(x*10000+y)) {\n      // 有阻挡，返回true\n      return true;\n    }\n    return false;\n  }, width, height, start, end);\n\n  // console.log(id, data, blockedMap, block, width, height, start, end, result);\n\n  self.postMessage({\n    id: id,\n    path: result\n  });\n\n});\n\nfunction path (collisionFunction, width, height, start, end) {\n  // 用一个点结构的x和y值返回一个字符串的key\n  // 例如{x: 9, y: 8}返回\"9-8\"\n  let tag = function (point) {\n    return point.x.toString() + \"-\" + point.y.toString();\n  };\n  // 计算点结构a和b之间的曼哈顿距离，即不带斜走的直线距离\n  let manhattan = function (a, b) {\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n  };\n  // 粗略验证一个点是否可用，是否超出边界，地图上是否是墙\n  let valid = function (x, y) {\n    if (collisionFunction(x, y))\n      return false;\n    return true;\n  };\n  // 通过坐标x，y，当前最好的节点best和一个附加值（直线10，斜线14），返回一个新节点\n  let make = function (x, y, best, addition, direction) {\n    let t = {\n      x: x,\n      y: y,\n      g: best.g + addition\n    };\n    t.key = tag(t);\n    t.h = manhattan(t, end);\n    t.f = t.g + t.h;\n    t.front = best.front.slice();\n    t.front.push(best.key);\n    return t;\n  };\n\n  // 开启列表和关闭列表\n  let open = {};\n  let close = {};\n\n  //构建起始节点\n  open[tag(start)] = {\n    x: start.x,\n    y: start.y,\n    key: tag(start),\n    f: 0,\n    g: 0,\n    h: manhattan(start, end),\n    front: []\n  };\n\n  while (Object.keys(open).length) {\n    // 找到F值最小的节点\n    let best = null;\n    for (let key in open) {\n      if (best == null || open[key].f < best.f) {\n        best = open[key];\n      }\n    }\n    // 从开启列表中删除，加入关闭列表\n    delete open[best.key];\n    close[best.key] = best;\n\n    // 如果这个最好的节点就是结尾节点，则返回\n    if (best.x == end.x && best.y == end.y) {\n      best.front.push(tag(end));\n      let result = [];\n      for (let i = 0, len = best.front.length; i < len; i++) {\n        let m = best.front[i].match(/(\\d+)-(\\d+)/);\n        if (m) {\n          result.push({\n            x: parseInt(m[1]),\n            y: parseInt(m[2])\n          });\n        }\n      }\n      return result;\n    }\n\n    // 记录上下左右，和四个斜方向的可能值\n    let possible = [];\n\n    if (valid(best.x, best.y - 1)) { // 验证up\n      possible.push(make(best.x, best.y - 1, best, 10));\n    }\n    if (valid(best.x, best.y + 1)) { // 验证down\n      possible.push(make(best.x, best.y + 1, best, 10));\n    }\n    if (valid(best.x - 1, best.y)) { // 验证left\n      possible.push(make(best.x - 1, best.y, best, 10));\n    }\n    if (valid(best.x + 1, best.y)) { // 验证right\n      possible.push(make(best.x + 1, best.y, best, 10));\n    }\n\n    // 去除已经在开启列表和关闭列表中的\n    possible.forEach(function (element) {\n      let t = tag(element);\n      if (open[t]) return;\n      if (close[t]) return;\n      open[t] = element;\n    });\n\n  } // while\n\n  return null;\n}\n"]}