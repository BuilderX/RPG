{"version":3,"sources":["src/Game/GameActorNPC.js"],"names":[],"mappings":"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","file":"src/Game/GameActorNPC.js","sourcesContent":["/*\n\nA-RPG Game, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n(function () {\n  \"use strict\";\n\n  let internal = Sprite.Namespace();\n\n  /**\n    英雄类\n    属性：\n      this.sprite 精灵\n  */\n  Game.assign(\"ActorNPC\", class GameActorNPC extends Game.Actor {\n    constructor (actorData) {\n      super(actorData);\n    }\n\n    heroUse () {\n      if (this.data.contact) {\n\n        let options = {};\n\n        if (this.data.contact) {\n          Sprite.each(this.data.contact, (talk, key) => {\n            let h = Game.hero;\n            let d = Game.hero.data;\n            let result = null;\n            try {\n              result = eval(talk.condition)\n            } catch (e) {\n              console.error(talk.condition);\n              console.error(e);\n              throw new Error(\"talk.condition eval error\");\n            }\n            if (result) {\n              options[key] = key;\n            }\n          });\n        }\n\n        let quests = null;\n\n        if (this.quests) {\n          quests = this.quests.filter(function (quest) {\n            if (Game.hero.hasQuest(quest.id)) {\n              return false;\n            }\n            return true;\n          });\n          if (quests.length) {\n            options[\"任务\"] = \"quest\";\n          }\n        }\n\n        let completeQuests = [];\n        Game.hero.data.quest.current.forEach((quest) => {\n          let complete = true;\n          if (quest.target.type == \"kill\") {\n            for (let key in quest.target.kill) {\n              let t = quest.target.kill[key];\n              if (t.current < t.need) {\n                complete = false;\n              }\n            }\n          }\n\n          if (complete) {\n            completeQuests.push(quest);\n          }\n        });\n        if (completeQuests.length > 0) {\n          options[\"完成任务\"] = \"completeQuest\";\n        }\n\n        if (this.data.trade) {\n          options[\"买入\"] = \"buy\";\n          options[\"卖出\"] = \"sell\";\n        }\n\n        Game.choice(options, (choice) => {\n          switch (choice) {\n            case \"buy\":\n              this.heroUse();\n              Game.windows.buy.open(this.data.trade);\n              break;\n            case \"sell\":\n              this.heroUse();\n              Game.windows.sell.open(this.data.trade);\n              break;\n            case \"quest\":\n              let questOptions = {};\n              quests.forEach((quest, index) => {\n                questOptions[quest.name] = index;\n              });\n              Game.choice(questOptions, (choice) => {\n                if (Number.isInteger(choice)) {\n                  let quest = quests[choice];\n                  Game.confirm({\n                    message: quest.before,\n                    yes: \"接受任务\",\n                    no: \"拒绝\"\n                  }, () => {\n                    Game.hero.data.quest.current.push(quest);\n                    this.heroUse();\n                  }, () => {\n                    this.heroUse();\n                  });\n                } else {\n                  this.heroUse();\n                }\n              });\n              break;\n            case \"completeQuest\":\n              let completeQuestOptions = {};\n              completeQuests.forEach((quest, index) => {\n                completeQuestOptions[quest.name] = index;\n              });\n              Game.choice(completeQuestOptions, (choice) => {\n                if (Number.isInteger(choice)) {\n                  let quest = completeQuests[choice];\n\n                  Game.hero.data.quest.current.splice(\n                    Game.hero.data.quest.current.indexOf(quest), 1\n                  );\n                  Game.hero.data.quest.past.push(quest);\n\n                  this.heroUse();\n                  Game.dialogue([quest.finish], this.data.name);\n                  if (quest.reward) {\n                    if (quest.reward.gold) {\n                      Game.hero.data.gold += quest.reward.gold;\n                    }\n                    if (quest.reward.exp) {\n                      Game.hero.data.exp += quest.reward.exp;\n                    }\n                  }\n                };\n              });\n              break;\n            default:\n              if (this.data.contact[choice]) {\n                this.heroUse();\n                Game.dialogue(this.data.contact[choice].content, this.data.name);\n              }\n          }\n        });\n      }\n    }\n\n  });\n\n\n})();\n"]}