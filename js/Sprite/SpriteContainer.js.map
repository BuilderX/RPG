{"version":3,"sources":["src/Sprite/SpriteContainer.js"],"names":[],"mappings":"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","file":"src/Sprite/SpriteContainer.js","sourcesContent":["/*\n\n2D Game Sprite Library, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n/**\n * @fileoverview Class Sprite.Container, it's a general container\n * Contain Sprite.Sheet, Sprite.Bitmap, Sprite.Shape, Sprite.Text, Sprite.Frame or Sprite.Container\n * @author mail@qhduan.com (QH Duan)\n */\n\n(function () {\n \"use strict\";\n\n  let internal = Sprite.Namespace();\n\n  /**\n   * Contain everything which inherit from Sprite.Display\n   * @class\n   */\n  Sprite.assign(\"Container\", class SpriteContainer extends Sprite.Display {\n\n    /**\n     * Construct Sprite.Container\n     * @constructor\n     */\n    constructor () {\n      super();\n      let privates = internal(this);\n      /**\n       * Contain all children element\n       * @private\n       */\n      privates.children = [];\n      /**\n       * Cached canvas\n       */\n      privates.cacheCanvas = null;\n    }\n\n    /**\n     * @return {Array} Children array\n     */\n    get children () {\n      return internal(this).children;\n    }\n\n    set children (value) {\n      throw new Error(\"Sprite.Container.children readonly\");\n    }\n\n    /**\n     * @return {Object} Cached canvas\n     */\n    get cacheCanvas () {\n      return internal(this).cacheCanvas;\n    }\n\n    set cacheCanvas (value) {\n      throw new Error(\"Sprite.Container.cacheCanvas readonly\");\n    }\n\n    /**\n     * Remove canvas cache\n     */\n    clearCache () {\n      internal(this).cacheCanvas = null;\n    }\n\n    /**\n     * Prerender all children as cache\n     */\n    cache (x, y, width, height) {\n      let privates = internal(this);\n      if (privates.cacheCanvas) {\n        privates.cacheCanvas = null;\n      }\n      for (let child of this.children) {\n        child.parent = null;\n      }\n      let canvas = document.createElement(\"canvas\");\n      canvas.width = width;\n      canvas.height = height;\n      let context = canvas.getContext(\"2d\");\n      this.draw(context);\n      privates.cacheCanvas = canvas;\n      for (let child of this.children) {\n        child.parent = this;\n      }\n    }\n\n    /**\n     * Hit test\n     */\n    hitTest (x, y) {\n      let privates = internal(this);\n      if (this.cacheCanvas) {\n        return super.hitTest(x, y);\n      } else {\n        let hitted = [];\n        for (let child of this.children) {\n          let ret = child.hitTest(x, y);\n          if (ret instanceof Array) {\n            hitted = hitted.concat(ret);\n          } else if (ret === true) {\n            hitted.push(child);\n          }\n        }\n        return hitted;\n      }\n    }\n\n    /**\n     * Draw all children in this container on context\n     * @param {Object} renderer Sprite.Webgl/Sprite.Canvas/Context\n     */\n    draw (renderer) {\n      let privates = internal(this);\n      if (this.alpha < 0.01 || this.visible != true) {\n        return;\n      }\n\n      if (this.cacheCanvas) {\n        this.drawImage(renderer, this.cacheCanvas,\n          0, 0, this.cacheCanvas.width, this.cacheCanvas.height,\n          0, 0, this.cacheCanvas.width, this.cacheCanvas.height);\n      } else {\n        if (this.children.length > 0) {\n          for (let child of this.children) {\n            if (child.visible == true && child.alpha >= 0.01) {\n              child.draw(renderer);\n            }\n          }\n        }\n      }\n    }\n\n    /**\n    */\n    hasChild (element) {\n      if (this.children.indexOf(element) != -1) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Append one or more children into container\n     * eg. c.appendChild(childA) c.appendChild(childA, childB)\n     * @param one or more children\n     */\n    appendChild () {\n      let args = Array.prototype.slice.call(arguments);\n\n      if (args.length <= 0) {\n        throw new Error(\"Sprite.Container.appendChild got an invalid arguments\");\n      }\n\n      for (let element of args) {\n        if (element instanceof Sprite.Display == false) {\n          console.error(element);\n          throw new Error(\"Sprite.Container.appendChild only accept Sprite.Display or it's sub-class\");\n        }\n        element.parent = this;\n        this.children.push(element);\n      }\n\n      this.emit(\"addedChildren\");\n    }\n\n    /**\n     * Append one or more children into container at certain position\n     * eg. c.appendChildAt(0, childA) c.appendChildAt(0, childA, childB)\n     * @param one or more children\n     */\n    appendChildAt () {\n      let args = Array.prototype.slice.call(arguments);\n\n      if (args.length <= 1) {\n        console.log(arguments, this);\n        throw new TypeError(\"Sprite.Container.appendChildAt has an invalid arguments\");\n      }\n\n      let index = args[0];\n      for (let i = 1, len = args.length; i < len; i++) {\n        if (args[i] instanceof Sprite.Display == false) {\n          console.error(args[i]);\n          throw new Error(\"Sprite.Container.appendChildAt only can accept Sprite.Display or it's sub-class\");\n        }\n        args[i].parent = this;\n        this.children.splice(index, 0, args[i]);\n      }\n\n      this.emit(\"addedChildren\");\n    }\n\n    /**\n     * Remove one child from a container\n     * eg. c.removeChild(childA)\n     * @param {Object} element The child you want to remove\n     * @return {boolean} If found and removed element, return true, otherwise, false\n     */\n    removeChild (element) {\n      let index = this.children.indexOf(element);\n      if (index != -1) { // found it\n        this.children[index].parent = null;\n        this.children.splice(index, 1);\n        this.emit(\"removedChildren\");\n        return true;\n      } else { // not found, element not a child\n        return false;\n      }\n    }\n\n    /**\n     * remove all children of container\n     */\n    clear () {\n      let privates = internal(this);\n      for (let child of privates.children) {\n        child.parent = null;\n      }\n      privates.children = [];\n      this.clearCache();\n      this.emit(\"removedChildren\");\n    }\n\n  });\n\n\n})();\n"]}