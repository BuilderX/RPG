{"version":3,"sources":["src/Sprite/SpriteStageOld.js"],"names":[],"mappings":"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","file":"src/Sprite/SpriteStageOld.js","sourcesContent":["/*\n\n2D Game Sprite Library, Built using JavaScript ES6\nCopyright (C) 2015 qhduan(http://qhduan.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\n/**\n * @fileoverview Class Sprite.Stage\n * @author mail@qhduan.com (QH Duan)\n */\n\n(function () {\n \"use strict\";\n\n  let internal = Sprite.Namespace();\n\n  /**\n   * Main Stage, display object\n   * @class\n   * @extends Sprite.Container\n   */\n  Sprite.assign(\"Stage\", class SpriteStage extends Sprite.Container {\n\n    /** @function Sprite.Stage.constructor\n     * consturct a Sprite.Stage with width and height\n     * @constructor\n     * @param width, the width of stage you need\n     * @param height, the height of stage you need\n     */\n    constructor (width, height) {\n      super();\n      let privates = internal(this);\n\n      if (!privates.renderer && Sprite.Webgl.support()) {\n        privates.renderer = new Sprite.Webgl(width, height);\n        privates.rendererType = \"webgl\";\n      }\n\n      // canvas 2d first\n      if (!privates.renderer && Sprite.Canvas.support()) {\n        privates.renderer = new Sprite.Canvas(width, height);\n        privates.rendererType = \"canvas\";\n      }\n\n      if (!privates.renderer) {\n        throw new Error(\"Sprite.Stage all renderer not support\");\n      }\n\n      /**\n      * color when stage is empty\n      */\n      privates.color = \"#000000\";\n    }\n\n    get renderer () {\n      let privates = internal(this);\n      return privates.renderer;\n    }\n\n    set renderer (value) {\n      throw new Error(\"Sprite.Stage renderer readonly\");\n    }\n\n    get rendererType () {\n      let privates = internal(this);\n      return privates.rendererType;\n    }\n\n    set rendererType (value) {\n      throw new Error(\"Sprite.Stage.rendererType readonly\")\n    }\n\n    filter (name, value) {\n      let privates = internal(this);\n      return privates.renderer.filter(name, value);\n    }\n\n    findHit (event) {\n      let privates = internal(this);\n      let hitted = this.hitTest(this.mouseX, this.mouseY);\n      hitted.reverse();\n      if (hitted.length)\n        return hitted;\n      return null;\n    }\n\n    get width () {\n      let privates = internal(this);\n      return privates.renderer.width;\n    }\n\n    set width (value) {\n      let privates = internal(this);\n      privates.renderer.width = value;\n    }\n\n    get height () {\n      let privates = internal(this);\n      return privates.renderer.height;\n    }\n\n    set height (value) {\n      let privates = internal(this);\n      privates.renderer.height = value;\n    }\n\n    get color () {\n      let privates = internal(this);\n      return privates.renderer.color;\n    }\n\n    set color (value) {\n      let privates = internal(this);\n      privates.renderer.color = value;\n    }\n\n    get canvas () {\n      return this.renderer.canvas;\n    }\n\n    set canvas (value) {\n      throw new Error(\"Sprite.Stage.canvas readonly\")\n    }\n\n    /// @function Sprite.Stage.clear\n    /// clear the stage\n    clear () {\n      internal(this).renderer.clear();\n    }\n\n    update () {\n      this.draw();\n    }\n\n    draw () {\n      let privates = internal(this);\n      this.emit(\"beforeDraw\");\n\n      /** this.children, never privates.children, because children are super's */\n      if (this.children.length <= 0) {\n        return false;\n      }\n\n      this.clear();\n\n      for (let child of this.children) {\n        child.draw(this.renderer);\n      }\n\n      this.emit(\"afterDraw\");\n    }\n\n  });\n\n\n})();\n"]}